{"version":3,"file":"nestled.umd.min.js","sources":["../src/APU.js","../src/Audio/AudioBuffer.js","../src/Audio/Channels/Channel.js","../src/Audio/Channels/PulseChannel.js","../src/Audio/Channels/TriangleChannel.js","../src/Audio/Channels/NoiseChannel.js","../src/Audio/Channels/DMC.js","../src/CPU.js","../src/Video/Colors.js","../src/Video/VideoBuffer.js","../src/Video/VideoOutput.js","../src/PPU.js","../src/Engine.js","../src/Cartridges/Cartridge.js","../src/Cartridges/Mappers/NROM.js","../src/Cartridges/Mappers/MMC1.js","../src/Cartridges/Mappers.js","../src/Cartridges/Mapper.js","../src/Cartridges/CartConnector.js","../src/Controllers/Controller.js","../src/Controllers/Joypad.js","../src/Controllers/Devices/Keyboard.js","../src/Controllers/CtrlConnector.js","../src/Audio/AudioOutput.js","../src/NES.js"],"sourcesContent":["import { AudioBuffer } from './Audio/AudioBuffer.js';\nimport {\n    PulseChannel,\n    TriangleChannel,\n    NoiseChannel,\n    DMC\n} from './Audio/Channels.js';\n\nconst cyclesFrequency = 1789772.727 / 2;\n\nexport class APU {\n    constructor(cpu) {\n        this.bus = cpu.bus;\n        this.cpu = cpu;\n        \n        this.pulse1   = new PulseChannel(1);\n        this.pulse2   = new PulseChannel(2);\n        this.triangle = new TriangleChannel;\n        this.noise    = new NoiseChannel;\n        this.dmc      = new DMC(cpu);\n        \n        this.audioBuffer       = null;\n        this.cyclesPerSample   = 0;\n        this.cyclesUntilSample = 0;\n        \n        this.irqDisabled = false;\n        this.irq         = false;\n        \n        this.status  = null;\n        this.counter = null;\n        \n        this.carry = 0;\n        this.cycle = 0;\n    }\n    \n    powerOn() {\n        this.bus.audioOutput.start();\n        this.audioBuffer = new AudioBuffer(this.bus.audioOutput);\n        \n        this.cyclesPerSample   = cyclesFrequency / this.audioBuffer.sampleRate;\n        this.cyclesUntilSample = this.cyclesPerSample;\n    }\n    powerOff() {\n        this.bus.audioOutput.stop();\n        this.audioBuffer = null;\n    }\n    \n    reset() {\n        this.pulse1.reset();\n        this.pulse2.reset();\n        this.triangle.reset();\n        this.noise.reset();\n        this.dmc.reset();\n        \n        this.counter = 0;\n        this.irq     = false;\n    }\n    \n    //== Interrupt ==================================================//\n    doIRQ() {\n        this.irq = true;\n        this.cpu.doIRQ();\n    }\n    \n    //== Registers ==================================================//\n    //= 0x4015 Status =//\n    get status() {\n        let value = (this.pulse1.length   && 0x01) +\n                    (this.pulse2.length   && 0x02) +\n                    (this.triangle.length && 0x04) +\n                    (this.noise.length    && 0x08) +\n                    (this.dmc.sampleLeft  && 0x10) +\n                    (this.dmc.irq         && 0x80) +\n                    (this.irq             && 0x40);\n        this.dmc.irq = false;\n        this.irq     = false;\n        \n        return value;\n    }\n    set status(value) {\n        if (value !== null) {\n            this.pulse1.enabled   = !!(value & 0x01);\n            this.pulse2.enabled   = !!(value & 0x02);\n            this.triangle.enabled = !!(value & 0x04);\n            this.noise.enabled    = !!(value & 0x08);\n            this.dmc.enabled      = !!(value & 0x10);\n        } else {\n            this.pulse1.enabled   = false;\n            this.pulse2.enabled   = false;\n            this.triangle.enabled = false;\n            this.noise.enabled    = false;\n            this.dmc.enabled      = false;\n        }\n    }\n    \n    //= 0x4017 Frame counter =//\n    set counter(value) {\n        if (value !== null) {\n            if (value >= 0x80) {\n                this.counterMode = 1;\n                this.irqDisabled = (value >= 0xC0);\n            } else {\n                this.counterMode = 0;\n                this.irqDisabled = (value >= 0x40);\n            }\n            \n            if (this.irqDisabled)\n                this.irq = false;\n            \n            this.resetDelay = this.carry ? 3 : 4;\n            \n            if (this.counterMode === 1) {\n                this.doQuarter();\n                this.doHalf();\n            }\n        } else {\n            this.counterMode = 0;\n            this.irqDisabled = false;\n            this.resetDelay = 0;\n        }\n    }\n    \n    //== Registers access ===========================================//\n    readRegister(address) {\n        if (address === 0x4015)\n            return this.status;\n        else\n            return 0;\n    }\n    writeRegister(address, data) {\n        if (address <= 0x4003)\n            this.pulse1.writeRegister(address, data);\n        else if (address <= 0x4007)\n            this.pulse2.writeRegister(address, data);\n        else if (address <= 0x400B)\n            this.triangle.writeRegister(address, data);\n        else if (address <= 0x400F)\n            this.noise.writeRegister(address, data);\n        else if (address <= 0x4013)\n            this.dmc.writeRegister(address, data);\n        else if (address === 0x4015)\n            this.status = data;\n        else if (address === 0x4017)\n            this.counter = data;\n    }\n    \n    //== Execution ==================================================//\n    doCycles(count) {\n        let cycle = count + this.carry;\n        this.carry = cycle % 2;\n        cycle = (cycle - this.carry) / 2;\n        while (cycle--) {\n            if (this.resetDelay > 0) {\n                if (--this.resetDelay === 0)\n                    this.cycle = 0;\n            }\n            this.doCycle();\n        }\n    }\n    \n    doCycle() {\n        let cycle = this.cycle++;\n        if (cycle <= 7457) {\n            if (cycle === 7457) {\n                this.doQuarter();\n            }\n        } else if (cycle <= 14914) {\n            if (cycle === 14914) {\n                this.doQuarter();\n                this.doHalf();\n            }\n        } else if (cycle <= 22371) {\n            if (cycle === 22371) {\n                this.doQuarter();\n            }\n        } else if (cycle >= 29828) {\n            if (cycle === 29828 && this.counterMode === 0) {\n                this.doQuarter();\n                this.doHalf();\n                \n                if (!this.irqDisabled)\n                    this.doIRQ();\n                \n                this.cycle = 0;\n            } else if (cycle === 37281) {\n                this.doQuarter();\n                this.doHalf();\n                \n                this.cycle = 0;\n            }\n        }\n        this.pulse1.doCycle();\n        this.pulse2.doCycle();\n        this.triangle.doCycle();\n        this.noise.doCycle();\n        this.dmc.doCycle();\n        \n        if (--this.cyclesUntilSample <= 0) {\n            this.doSample();\n            this.cyclesUntilSample += this.cyclesPerSample;\n        }\n    }\n    \n    doQuarter() {\n        this.pulse1.doQuarter();\n        this.pulse2.doQuarter();\n        this.triangle.doQuarter();\n        this.noise.doQuarter();\n    }\n    \n    doHalf() {\n        this.pulse1.doHalf();\n        this.pulse2.doHalf();\n        this.triangle.doHalf();\n        this.noise.doHalf();\n    }\n\n    //== Output =====================================================//\n    doSample() {\n        let pulses = this.pulse1.output + this.pulse2.output;\n        let others = 3*this.triangle.output + 2*this.noise.output + this.dmc.output;\n        \n        this.audioBuffer.writeSample(pulsesSamples[pulses] + othersSamples[others]);\n    }\n}\n\nconst pulsesSamples = new Float32Array(31);\nfor (let i = 0; i < 31; i++ ) {\n    pulsesSamples[i] = 95.52 / (8128.0 / i + 100);\n}\nconst othersSamples = new Float32Array(203);\nfor (let i = 0; i < 203; i++ ) {\n    othersSamples[i] = 163.67 / (24329.0 / i + 100);\n}\n\nexport default APU;\n","export class AudioBuffer {\n    constructor(output) {\n        this.output       = output;\n        this.context      = output.context;\n        this.sampleRate   = this.context ? this.context.sampleRate : 44100;\n        this.bufferLength = this.sampleRate / 30;\n        \n        this.createNewBuffer();\n    }\n    \n    createNewBuffer() {\n        if (this.context) {\n            this.buffer = this.context.createBuffer(1, this.bufferLength, this.sampleRate);\n            this.data   = this.buffer.getChannelData(0);\n        } else {\n            this.buffer = null;\n            this.data   = new Uint8Array(this.bufferLength);\n        }\n        \n        this.index = 0;\n    }\n    \n    //===============================================================//\n    writeSample(value) {\n        this.data[this.index++] = value;\n        \n        if (this.index === this.bufferLength) {\n            this.output.schedule(this.buffer);\n            this.createNewBuffer();\n        }\n    }\n}\n\nexport default AudioBuffer;\n","const lengths = [\n    10, 254, 20,  2, 40,  4, 80,  6, 160,  8, 60, 10, 14, 12, 26, 14,\n    12,  16, 24, 18, 48, 20, 96, 22, 192, 24, 72, 26, 16, 28, 32, 30,\n];\n\nexport class Channel {\n    constructor() {\n        this.enabled = false;\n        \n        this.lengthCounter     = 0;\n        this.lengthCounterHalt = false;\n    }\n    \n    reset() {\n        this.enabled = false;\n        \n        this.length  = 0;\n    }\n    \n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        if (!value)\n            this.lengthCounter = 0;\n        this._enabled = value;\n    }\n    \n    //== Registers ==================================================//\n    get length() {\n        return this.lengthCounter;\n    }\n    set length(value) {\n        if (this.enabled)\n            this.lengthCounter = lengths[(value & 0xF8) >>> 3];\n    }\n    \n    updateLength() {\n        if (this.lengthCounter > 0 && !this.lengthCounterHalt)\n            this.lengthCounter--;\n    }\n}\n\nexport default Channel;\n","import Channel from './Channel.js';\n\nconst duties = [\n    [0, 0, 0, 0, 0, 0, 0, 1],\n    [0, 0, 0, 0, 0, 0, 1, 1],\n    [0, 0, 0, 0, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1, 1, 0, 0],\n];\n\nexport class PulseChannel extends Channel {\n    constructor(id) {\n        super();\n        \n        this.id = id;\n        \n        this.constantVolume = 0;\n        \n        this.envelopeEnabled = true;\n        this.envelopeReset   = false;\n        this.envelopeCycle   = 0;\n        this.envelopePeriod  = 0;\n        this.envelopeVolume  = 0;\n        this.envelopeLoop    = false;\n        \n        this.dutyCycle = 0;\n        this.duty      = 0;\n        \n        this.sweepEnabled = false;\n        this.sweepReset   = false;\n        this.sweepCycle   = 0;\n        this.sweepPeriod  = 0;\n        this.sweepNegate  = false;\n        this.sweepShift   = 0;\n        \n        this.timerCycle  = 0;\n        this.timerPeriod = 0;\n    }\n    \n    reset() {\n        super.reset();\n        \n        this.envelopeCycle  = 0;\n        this.envelopeVolume = 0;\n        \n        this.sweepCycle = 0;\n        \n        this.timerCycle = 0;\n        \n        this.volume = 0;\n        this.sweep  = 0;\n        this.timer  = 0;\n    }\n    \n    //== Registers ==================================================//\n    get volume() {\n        let volume = this.envelopeEnabled ? this.envelopeVolume : this.constantVolume;\n        return volume * this.duty[this.dutyCycle];\n    }\n    set volume(value) {\n        this.duty = duties[(value & 0xC0) >>> 6];\n        \n        if (value > 0x0F) {\n            this.lengthCounterHalt = (value & 0x20) !== 0;\n            this.envelopeEnabled   = (value & 0x10) === 0;\n            this.constantVolume    = (value & 0x0F);\n        } else {\n            this.lengthCounterHalt = false;\n            this.envelopeEnabled   = true;\n            this.constantVolume    = value;\n        }\n        \n        this.envelopePeriod   = this.constantVolume;\n        this.envelopeLoop     = this.lengthCounterHalt;\n    }\n    \n    get sweep() {\n        let sweep = this.timerPeriod >>> this.sweepShift;\n        return this.sweepNegate ? ((this.id === 1) ? ~sweep : -sweep) : sweep;\n    }\n    set sweep(value) {\n        this.sweepEnabled = (value & 0x80) !== 0;\n        this.sweepPeriod  = (value & 0x70) >>> 4;\n        this.sweepNegate  = (value & 0x08) !== 0;\n        this.sweepShift   = (value & 0x07);\n        this.sweepReset   = true;\n    }\n    \n    get timer() {\n        return this.timerPeriod;\n    }\n    set timer(value) {\n        this.timerPeriod = (this.timerPeriod & 0x700) + value;\n    }\n    \n    get length() {\n        return super.length;\n    }\n    set length(value) {\n        this.dutyCycle = 0;\n        this.envelopeReset = true;\n        \n        this.timerPeriod = (this.timerPeriod & 0x0FF) | ((value & 0x07) << 8);\n        \n        super.length = value;\n    }\n    \n    //== Registers access ===========================================//\n    writeRegister(address, data) {\n        switch (address) {\n        case 0x4000: case 0x4004: this.volume = data; break;\n        case 0x4001: case 0x4005: this.sweep  = data; break;\n        case 0x4002: case 0x4006: this.timer  = data; break;\n        case 0x4003: case 0x4007: this.length = data; break;\n        }\n    }\n    \n    //== Execution ==================================================//\n    doCycle() {\n        if (--this.timerCycle <= 0) {\n            this.timerCycle = (this.timerPeriod + 1);\n            \n            this.dutyCycle++;\n            if (this.dutyCycle >= 0x8)\n                this.dutyCycle -= 0x8;\n        }\n    }\n    \n    doQuarter() {\n        if (this.envelopeReset) {\n            this.envelopeCycle  = this.envelopePeriod;\n            this.envelopeVolume = 0xF;\n            this.envelopeReset  = false;\n        } else if (this.envelopeCycle > 0) {\n            this.envelopeCycle--;\n        } else {\n            this.envelopeCycle = this.envelopePeriod;\n            if (this.envelopeVolume > 0) {\n                this.envelopeVolume--;\n            } else if (this.envelopeLoop) {\n                this.envelopeVolume = 0xF;\n            }\n        }\n    }\n    \n    doHalf() {\n        if (this.sweepCycle > 0) {\n            this.sweepCycle--;\n        } else {\n            if (this.sweepEnabled && this.sweepShift) {\n                let timer = this.timer;\n                if (timer >= 0x008 && timer+this.sweep < 0x800)\n                    this.timerPeriod += this.sweep;\n            }\n            this.sweepCycle = this.sweepPeriod;\n        }\n        if (this.sweepReset) {\n            this.sweepCycle = this.sweepPeriod;\n            this.sweepReset = false;\n        }\n        \n        this.updateLength();\n    }\n    \n    //== Output =====================================================//\n    get output() {\n        if (this.length > 0 && this.timer >= 0x008 && this.timer+this.sweep < 0x800) {\n            return this.volume;\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport default PulseChannel;\n","import Channel from './Channel.js';\n\nconst duty = [\n    0,  1,  2,  3,  4,  5,  6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    15, 14, 13, 12, 11, 10, 9, 8, 7, 6,  5,  4,  3,  2,  1,  0,\n];\n\nexport class TriangleChannel extends Channel {\n    constructor() {\n        super();\n        \n        this.dutyCycle = 0;\n        \n        this.linearCounter      = 0;\n        this.linearCounterMax   = 0;\n        this.linearCounterReset = false;\n        \n        this.timerCycle  = 0;\n        this.timerPeriod = 0;\n    }\n    \n    reset() {\n        super.reset();\n        \n        this.dutyPosition  = 0;\n        this.linearCounter = 0;\n        \n        this.timerCycle    = 0;\n        \n        this.counter = 0;\n        this.timer   = 0;\n    }\n    \n    //== Registers ==================================================//\n    set counter(value) {\n        if (value >= 0x80) {\n            this.lengthCounterHalt = true;\n            this.linearCounterMax  = (value - 0x80);\n        } else {\n            this.lengthCounterHalt = false;\n            this.linearCounterMax  = value;\n        }\n        this.linearCounterControl = this.lengthCounterHalt;\n    }\n    \n    get timer() {\n        return this.timerPeriod;\n    }\n    set timer(value) {\n        this.timerPeriod = (this.timerPeriod & 0x700) + value;\n    }\n    \n    get length() {\n        return super.length;\n    }\n    set length(value) {\n        this.linearCounterReset = true;\n        \n        this.timerPeriod = (this.timerPeriod & 0x0FF) | ((value & 0x07) << 8);\n        \n        super.length = value;\n    }\n    \n    //== Registers access ===========================================//\n    writeRegister(address, data) {\n        switch (address) {\n        case 0x4008: this.counter = data; break;\n        case 0x400A: this.timer   = data; break;\n        case 0x400B: this.length  = data; break;\n        }\n    }\n    \n    //== Execution ==================================================//\n    doCycle() {\n        this.timerCycle -= 2;\n        if (this.timerCycle <= 0) {\n            this.timerCycle = (this.timerPeriod + 1);\n            \n            if (this.lengthCounter && this.linearCounter && this.timerPeriod > 3) {\n                this.dutyCycle++;\n                if (this.dutyCycle >= 0x20)\n                    this.dutyCycle -= 0x20;\n            }\n        }\n    }\n    \n    doQuarter() {\n        if (this.linearCounterReset) {\n            this.linearCounter = this.linearCounterMax;\n        } else if (this.linearCounter > 0) {\n            this.linearCounter--;\n        }\n        \n        if (!this.linearCounterControl)\n            this.linearCounterReset = false;\n    }\n    \n    doHalf() {\n        this.updateLength();\n    }\n    \n    //== Output =====================================================//\n    get output() {\n        return duty[this.dutyCycle];\n    }\n}\n\nexport default TriangleChannel;\n","import Channel from './Channel.js';\n\nconst timerPeriods = [ // fixed to NTSC for now\n    4, 8, 16, 32, 64, 96, 128, 160, 202, 254, 380, 508, 762, 1016, 2034, 4068\n];\n\nexport class NoiseChannel extends Channel {\n    constructor() {\n        super();\n        \n        this.constantVolume = 0;\n        \n        this.envelopeEnabled = true;\n        this.envelopeReset   = false;\n        this.envelopeCycle   = 0;\n        this.envelopePeriod  = 0;\n        this.envelopeVolume  = 0;\n        this.envelopeLoop    = false;\n        \n        this.timerMode   = false;\n        this.timerCycle  = 0;\n        this.timerPeriod = 0;\n        \n        this.shiftRegister = 1;\n    }\n    \n    reset() {\n        super.reset();\n        \n        this.envelopeCycle  = 0;\n        this.envelopeVolume = 0;\n        \n        this.timerCycle    = 0;\n        \n        this.shiftRegister = 1;\n        \n        this.volume = 0;\n        this.timer  = 0;\n    }\n    \n    //== Registers ==================================================//\n    get volume() {\n        return this.envelopeEnabled ? this.envelopeVolume : this.constantVolume;\n    }\n    set volume(value) {\n        if (value > 0x0F) {\n            this.lengthCounterHalt = (value & 0x20) !== 0;\n            this.envelopeEnabled   = (value & 0x10) === 0;\n            this.constantVolume    = (value & 0x0F);\n        } else {\n            this.lengthCounterHalt = false;\n            this.envelopeEnabled   = true;\n            this.constantVolume    = value;\n        }\n        \n        this.envelopeLoop   = this.lengthCounterHalt;\n        this.envelopePeriod = this.constantVolume;\n    }\n    \n    get timer() {\n        return this.timerPeriod;\n    }\n    set timer(value) {\n        if (value > 0x0F) {\n            this.timerMode   = (value >= 0x80);\n            this.timerPeriod = timerPeriods[value & 0x0F];\n        } else {\n            this.timerMode   = false;\n            this.timerPeriod = timerPeriods[value];\n        }\n    }\n    \n    get length() {\n        return super.length;\n    }\n    set length(value) {\n        this.envelopeReset = true;\n        \n        super.length = value;\n    }\n    \n    //== Registers access ===========================================//\n    writeRegister(address, data) {\n        switch (address) {\n        case 0x400C: this.volume = data; break;\n        case 0x400E: this.timer  = data; break;\n        case 0x400F: this.length = data; break;\n        }\n    }\n    \n    //== Execution ==================================================//\n    doCycle() {\n        if (--this.timerCycle <= 0) {\n            this.timerCycle = this.timerPeriod;\n            \n            let feedback = (this.shiftRegister & 1);\n            if (this.timerMode)\n                feedback ^= ((this.shiftRegister >>> 6) & 1);\n            else\n                feedback ^= ((this.shiftRegister >>> 1) & 1);\n            \n            this.shiftRegister = (this.shiftRegister >>> 1) | (feedback << 14);\n        }\n    }\n    \n    doQuarter() {\n        if (this.envelopeReset) {\n            this.envelopeCycle  = this.envelopePeriod;\n            this.envelopeVolume = 0xF;\n            this.envelopeReset  = false;\n        } else if (this.envelopeCycle > 0) {\n            this.envelopeCycle--;\n        } else {\n            this.envelopeCycle = this.envelopePeriod;\n            if (this.envelopeVolume > 0) {\n                this.envelopeVolume--;\n            } else if (this.envelopeLoop) {\n                this.envelopeVolume = 0xF;\n            }\n        }\n    }\n    \n    doHalf() {\n        this.updateLength();\n    }\n    \n    //== Output =====================================================//\n    get output() {\n        if (this.length > 0 && !(this.shiftRegister & 1)) {\n            return this.volume;\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport default NoiseChannel;\n","const timerPeriods = [ // fixed to NTSC for now\n    428, 380, 340, 320, 286, 254, 226, 214, 190, 160, 142, 128, 106, 84, 72, 54\n];\n\nexport class DMC {\n    constructor(cpu) {\n        this.cpu = cpu;\n        \n        this.enabled = false;\n        \n        this.cycle  = 0;\n        this.output = 0;\n        \n        this.timerCycle  = 0;\n        this.timerPeriod = 0;\n        \n        this.sampleAddress = 0;\n        this.sampleLength  = 0;\n        this.sampleIndex   = 0;\n        this.sampleLeft    = 0;\n        this.sampleLoop    = false;\n        this.sampleBuffer  = -1;\n        \n        this.shiftRegister     = -1;\n        this.shiftRegisterBits = 0;\n        \n        this.irqEnabled = false;\n        this.irq        = false;\n    }\n    \n    reset() {\n        this.cycle = 0;\n        \n        this.timerCycle = 0;\n        \n        this.sampleBuffer = -1;\n        \n        this.shiftRegister     = -1;\n        this.shiftRegisterBits = 0;\n        \n        this.rate    = 0;\n        this.load    = 0;\n        this.address = 0;\n        this.length  = 0;\n    }\n    \n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        if (value) {\n            if (this.sampleLeft === 0) {\n                this.sampleIndex = 0;\n                this.sampleLeft  = this.sampleLength;\n            }\n        } else {\n            this.sampleLeft = 0;\n        }\n        this.irq = false;\n        \n        this._enabled = value;\n    }\n    \n    //== Interrupt ==================================================//\n    doIRQ() {\n        this.irq = true;\n        if (this.irqEnabled)\n            this.cpu.doIRQ();\n    }\n    \n    //== Registers ==================================================//\n    get rate() {\n        return this.timerPeriod;\n    }\n    set rate(value) {\n        if (value >= 0x40) {\n            this.irqEnabled  = (value & 0x80) !== 0;\n            this.sampleLoop  = (value & 0x40) !== 0;\n            this.timerPeriod = timerPeriods[value & 0x0F];\n        } else {\n            this.irqEnabled = false;\n            this.sampleLoop = false;\n            if (value > 0x0F)\n                this.timerPeriod = timerPeriods[value & 0x0F];\n            else\n                this.timerPeriod = timerPeriods[value];\n        }\n        \n        if (!this.irqEnabled)\n            this.irq = false;\n    }\n    \n    get load() {\n        return this.output;\n    }\n    set load(value) {\n        if (value >= 0x80) value -= 0x80;\n        this.output = value;\n    }\n    \n    get address() {\n        return this.sampleAddress;\n    }\n    set address(value) {\n        this.sampleAddress = 0xC000 + (value * 64);\n    }\n    \n    get length() {\n        return this.sampleLength;\n    }\n    set length(value) {\n        this.sampleLength = (value * 16) + 1;\n    }\n    \n    //== Registers access ===========================================//\n    writeRegister(address, data) {\n        switch (address) {\n        case 0x4010: this.rate    = data; break;\n        case 0x4011: this.load    = data; break;\n        case 0x4012: this.address = data; break;\n        case 0x4013: this.length  = data; break;\n        }\n    }\n    \n    //== Execution ==================================================//\n    doCycle() {\n        if (this.cycle > 0) {\n            this.cycle--;\n        }\n        if (--this.timerCycle <= 0) {\n            this.timerCycle = this.timerPeriod;\n            this.updateSampleBuffer();\n            this.updateShiftRegister();\n            this.updateOutput();\n        }\n    }\n    \n    updateSampleBuffer() {\n        if (this.sampleBuffer < 0 && this.sampleLeft > 0) {\n            this.sampleBuffer = this.cpu.read(this.sampleAddress + this.sampleIndex++);\n            this.cycle = 4;\n            \n            if (--this.sampleLeft <= 0) {\n                if (this.sampleLoop) {\n                    this.sampleIndex = 0;\n                    this.sampleLeft = this.sampleLength;\n                } else if (this.irqEnabled) {\n                    this.doIRQ();\n                }\n            }\n        }\n    }\n    \n    updateShiftRegister() {\n        if (--this.shiftRegisterBits <= 0) {\n            this.shiftRegisterBits = 8;\n            this.shiftRegister = this.sampleBuffer;\n            this.sampleBuffer = -1;\n        }\n    }\n    \n    updateOutput() {\n        if (this.shiftRegister >= 0) {\n            if (this.shiftRegister & 1) {\n                if (this.output <= 125) {\n                    this.output += 2;\n                }\n            } else if (this.output >= 2) {\n                this.output -= 2;\n            }\n            this.shiftRegister >>>= 1;\n        }\n    }\n}\n\nexport default DMC;\n","import APU from './APU.js';\n\nconst cyclesLookup = [7,6,2,8,3,3,5,5,3,2,2,2,4,4,6,6, 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n                      6,6,2,8,3,3,5,5,4,2,2,2,4,4,6,6, 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n                      6,6,2,8,3,3,5,5,3,2,2,2,3,4,6,6, 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n                      6,6,2,8,3,3,5,5,4,2,2,2,5,4,6,6, 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n                      2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4, 2,6,2,6,4,4,4,4,2,5,2,5,5,5,5,5,\n                      2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4, 2,5,2,5,4,4,4,4,2,4,2,4,4,4,4,4,\n                      2,6,2,8,3,3,5,5,2,2,2,2,4,4,6,6, 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n                      2,6,3,8,3,3,5,5,2,2,2,2,4,4,6,6, 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7];\n\n//Helper function to convert signed bytes to javascript's native numbers\nfunction signByte(value) { return value>0x7F ? value-0x100 : value; }\n//Helper function to simulate binary overflow\nfunction wrapByte(value) { return value>0xFF ? value-0x100 : value; }\n\nexport class CPU {\n    constructor(nes) {\n        this.bus = nes;\n        \n        this.cycle = -1;\n        this.cycleOffset = -1;\n        \n        this.apu = new APU(this);\n        \n        this.ram   = new Uint8Array(0x800);\n        this.stack = this.ram.subarray(0x100, 0x200);\n        \n        this.nmiVector   = () => 0x0000;\n        this.resetVector = () => 0x0000;\n        this.irqVector   = () => 0x0000;\n        \n        this.A = 0xFF;\n        this.X = 0xFF;\n        this.Y = 0xFF;\n        this.P = 0xFF;\n        this.SP = 0xFF;\n        this.PC = 0xFFFF;\n        \n        //Addressing modes lookup table\n        this.addressLookup = [\n            this.imp, this.indX, this.imp, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.abs,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroX, this.zeroX, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absX, this.absX,\n            this.abs, this.indX, this.imp, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.abs,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroX, this.zeroX, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absX, this.absX,\n            this.imp, this.indX, this.imp, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.abs,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroX, this.zeroX, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absX, this.absX,\n            this.imp, this.indX, this.imp, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.ind,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroX, this.zeroX, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absX, this.absX,\n            this.imm, this.indX, this.imm, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.abs,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroY, this.zeroY, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absY, this.absY,\n            this.imm, this.indX, this.imm, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.abs,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroY, this.zeroY, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absY, this.absY,\n            this.imm, this.indX, this.imm, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.abs,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroX, this.zeroX, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absX, this.absX,\n            this.imm, this.indX, this.imm, this.indX, this.zero,  this.zero,  this.zero,  this.zero,  this.imp, this.imm,  this.imp, this.imm,  this.abs,  this.abs,  this.abs,  this.abs,\n            this.rel, this.indY, this.imp, this.indY, this.zeroX, this.zeroX, this.zeroX, this.zeroX, this.imp, this.absY, this.imp, this.absY, this.absX, this.absX, this.absX, this.absX\n        ].map((fn) => fn.bind(this));\n        \n        //Instructions lookup table\n        this.instructionLookup = [\n            this.BRK, this.ORA, this.KIL, this.NOP, this.NOP, this.ORA, this.ASL, this.NOP, this.PHP, this.ORA, this.ASL, this.NOP, this.NOP, this.ORA, this.ASL, this.NOP,\n            this.BPL, this.ORA, this.KIL, this.NOP, this.NOP, this.ORA, this.ASL, this.NOP, this.CLC, this.ORA, this.NOP, this.NOP, this.NOP, this.ORA, this.ASL, this.NOP,\n            this.JSR, this.AND, this.KIL, this.NOP, this.BIT, this.AND, this.ROL, this.NOP, this.PLP, this.AND, this.ROL, this.NOP, this.BIT, this.AND, this.ROL, this.NOP,\n            this.BMI, this.AND, this.KIL, this.NOP, this.NOP, this.AND, this.ROL, this.NOP, this.SEC, this.AND, this.NOP, this.NOP, this.NOP, this.AND, this.ROL, this.NOP,\n            this.RTI, this.EOR, this.KIL, this.NOP, this.NOP, this.EOR, this.LSR, this.NOP, this.PHA, this.EOR, this.LSR, this.NOP, this.JMP, this.EOR, this.LSR, this.NOP,\n            this.BVC, this.EOR, this.KIL, this.NOP, this.NOP, this.EOR, this.LSR, this.NOP, this.CLI, this.EOR, this.NOP, this.NOP, this.NOP, this.EOR, this.LSR, this.NOP,\n            this.RTS, this.ADC, this.KIL, this.NOP, this.NOP, this.ADC, this.ROR, this.NOP, this.PLA, this.ADC, this.ROR, this.NOP, this.JMP, this.ADC, this.ROR, this.NOP,\n            this.BVS, this.ADC, this.KIL, this.NOP, this.NOP, this.ADC, this.ROR, this.NOP, this.SEI, this.ADC, this.NOP, this.NOP, this.NOP, this.ADC, this.ROR, this.NOP,\n            this.NOP, this.STA, this.NOP, this.NOP, this.STY, this.STA, this.STX, this.NOP, this.DEY, this.NOP, this.TXA, this.NOP, this.STY, this.STA, this.STX, this.NOP,\n            this.BCC, this.STA, this.KIL, this.NOP, this.STY, this.STA, this.STX, this.NOP, this.TYA, this.STA, this.TXS, this.NOP, this.NOP, this.STA, this.NOP, this.NOP,\n            this.LDY, this.LDA, this.LDX, this.NOP, this.LDY, this.LDA, this.LDX, this.NOP, this.TAY, this.LDA, this.TAX, this.NOP, this.LDY, this.LDA, this.LDX, this.NOP,\n            this.BCS, this.LDA, this.KIL, this.NOP, this.LDY, this.LDA, this.LDX, this.NOP, this.CLV, this.LDA, this.TSX, this.NOP, this.LDY, this.LDA, this.LDX, this.NOP,\n            this.CPY, this.CMP, this.NOP, this.NOP, this.CPY, this.CMP, this.DEC, this.NOP, this.INY, this.CMP, this.DEX, this.NOP, this.CPY, this.CMP, this.DEC, this.NOP,\n            this.BNE, this.CMP, this.KIL, this.NOP, this.NOP, this.CMP, this.DEC, this.NOP, this.CLD, this.CMP, this.NOP, this.NOP, this.NOP, this.CMP, this.DEC, this.NOP,\n            this.CPX, this.SBC, this.NOP, this.NOP, this.CPX, this.SBC, this.INC, this.NOP, this.INX, this.SBC, this.NOP, this.NOP, this.CPX, this.SBC, this.INC, this.NOP,\n            this.BEQ, this.SBC, this.KIL, this.NOP, this.NOP, this.SBC, this.INC, this.NOP, this.SED, this.SBC, this.NOP, this.NOP, this.NOP, this.SBC, this.INC, this.NOP\n        ].map((fn) => fn.bind(this));\n        \n        this.isPowered = false;\n    }\n    \n    powerOn() {\n        this.cycle = 0;\n        this.cycleOffset = 0;\n        \n        //Bus access optimizations\n        this.ppu   = this.bus.ppu;\n        this.ctrl1 = this.bus.ctrlConnector.controllers[0];\n        this.ctrl2 = this.bus.ctrlConnector.controllers[1];\n        this.cart  = this.bus.cartConnector.cartridge;\n        \n        //Interrupt vector optimizations\n        let cart = this.bus.cartConnector.cartridge;\n        this.nmiVector   = () => cart.cpuRead(0xFFFA) + cart.cpuRead(0xFFFB)*256;\n        this.resetVector = () => cart.cpuRead(0xFFFC) + cart.cpuRead(0xFFFD)*256;\n        this.irqVector   = () => cart.cpuRead(0xFFFE) + cart.cpuRead(0xFFFF)*256;\n        \n        //Accumulator\n        this.A = 0;\n        //Indexes\n        this.X = 0;\n        this.Y = 0;\n        //Status register: Negative|oVerflow|---|*BRK*|Decimal|Interrupt|Zero|Carry\n        this.P = 0x34; //b00110100\n        //Stack pointer\n        this.SP = 0xFD;\n        //Program counter\n        this.PC = this.resetVector();\n        \n        this.apu.powerOn();\n        \n        this.isPowered = true;\n    }\n    powerOff() {\n        this.apu.powerOff();\n        \n        this.isPowered = false;\n    }\n    \n    reset() {\n        this.apu.reset();\n        this.doReset();\n    }\n    \n    //== Execution ==================================================//\n    doInstructions(limit = 0) {\n        limit += this.cycleOffset;\n        while (this.cycle <= limit) {\n            let cycles = this.doInstruction();\n            this.apu.doCycles(cycles);\n        }\n    }\n    \n    doInstruction() {\n        this.opcode  = this.read(this.PC++);\n        this.operand = this.read(this.PC++);\n        \n        this.instructionLookup[this.opcode](\n            (implied) => this.addressLookup[this.opcode](implied)\n        );\n        let cycles = cyclesLookup[this.opcode];\n        this.cycle += cycles;\n        \n        return cycles;\n    }\n    \n    //== Interrupts =================================================//\n    doNMI() {\n        this.pushWord(this.PC);\n        this.pushByte(this.P & ~0x10);\n        this.PC = this.nmiVector();\n        this.cycle += 7;\n    }\n    doReset() {\n        this.SP = this.SP+3;\n        this.Interrupt = false;\n        this.PC = this.resetVector();\n        this.cycle += 7;\n    }\n    doIRQ() {\n        if (this.Interrupt) return;\n        \n        this.pushWord(this.PC);\n        this.pushByte(this.P & ~0x10);\n        this.PC = this.irqVector();\n        this.cycle += 7;\n    }\n    \n    //== Memory access ==============================================//\n    read(address) {\n        if (address < 0x800) {\n            return this.ram[address];\n        } else if (address < 0x2000) {\n            return this.ram[address & 0x7FF];\n        } else if (address < 0x4018) {\n            if (address < 0x4000){\n                return this.ppu.readRegister(address);\n            } else if (address === 0x4016) {\n                return (address >>> 8) | this.ctrl1.read();\n            } else if (address === 0x4017) {\n                return (address >>> 8) | this.ctrl2.read();\n            } else {\n                return this.apu.readRegister(address);\n            }\n        } else {\n            return this.cart.cpuRead(address);\n        }\n    }\n    write(address, data) {\n        if (address < 0x800) {\n            this.ram[address] = data;\n        } else if (address < 0x2000) {\n            this.ram[address & 0x7FF] = data;\n        } else if (address < 0x4018) {\n            if (address < 0x4000) {\n                this.ppu.writeRegister(address,data);\n            } else if (address === 0x4014) {\n                let dmaAddress = data * 256;\n                for(let count = 0; count < 256; count++)\n                    this.ppu.OAMData = this.read(dmaAddress++);\n                \n                if (this.cycle & 1) this.cycle += 513;\n                else this.cycle += 514;\n            } else if (address === 0x4016) {\n                this.ctrl1.write(data);\n                this.ctrl2.write(data);\n            } else {\n                this.apu.writeRegister(address, data);\n            }\n        } else {\n            this.cart.cpuWrite(address, data);\n        }\n    }\n    \n    //== Stack ======================================================//\n    get SP()      { return this._SP; }\n    set SP(value) { this._SP = wrapByte(value); }\n    \n    pushByte(value) {\n        this.stack[this.SP--] = value;\n    }\n    pushWord(value) {\n        this.pushByte(value >> 8);\n        this.pushByte(value & 0xFF);\n    }\n    \n    pullByte() {\n        this.SP++;\n        return this.stack[this.SP];\n    }\n    pullWord() {\n        return this.pullByte() + this.pullByte()*256;\n    }\n    \n    //== Status =====================================================//\n    get Carry()          { return this.P & 0x01; }\n    get Zero()           { return this.P & 0x02; }\n    get Interrupt()      { return this.P & 0x04; }\n    get Decimal()        { return this.P & 0x08; }\n    get Overflow()       { return this.P & 0x40; }\n    get Negative()       { return this.P & 0x80; }\n    \n    set Carry(value)     { (value ? (this.P |= 0x01) : this.P &= ~0x01); }\n    set Zero(value)      { (value ? (this.P |= 0x02) : this.P &= ~0x02); }\n    set Interrupt(value) { (value ? (this.P |= 0x04) : this.P &= ~0x04); }\n    set Decimal(value)   { (value ? (this.P |= 0x08) : this.P &= ~0x08); }\n    set Overflow(value)  { (value ? (this.P |= 0x40) : this.P &= ~0x40); }\n    set Negative(value)  { (value ? (this.P |= 0x80) : this.P &= ~0x80); }\n    \n    //== Registers ==================================================//\n    get A() { return this._A; }\n    get X() { return this._X; }\n    get Y() { return this._Y; }\n    \n    set A(value) { this._A = this.ALU(value); }\n    set X(value) { this._X = this.ALU(value); }\n    set Y(value) { this._Y = this.ALU(value); }\n    \n    ALU(value) {\n        if (value > 0xFF) {\n            this.Carry = true;\n            while (value > 0xFF) value -= 0x100;\n        }\n        \n        this.Zero = (value === 0);\n        \n        if (value < 0) {\n            this.Negative = true;\n            while (value < 0) value += 0x100;\n        } else\n            this.Negative = (value >= 0x80);\n        \n        return value;\n    }\n    \n    //== Addressing Modes ===========================================//\n    \n    imp(implied) { this.PC--; return implied; }                   //Implied\n    imm() { return this.PC-1; }                                   //Immediate - #00\n    rel() { this.cycle++; return signByte(this.operand); }        //Relative - ±#00\n    \n    zero()  { return this.operand; }                              //Zero Page - $00\n    zeroX() { return wrapByte(this.operand + this.X); }           //Zero Page indexed X - $00+X\n    zeroY() { return wrapByte(this.operand + this.Y); }           //Zero Page indexed Y - $00+Y\n    \n    readWord() { return this.operand += this.read(this.PC++)*256; }\n    \n    abs() {\n        return this.readWord(); }                                 //Absolute - $0000\n    absX() {\n        if ((this.operand + this.X) > 0xFF) this.cycle++;\n        return this.readWord() + this.X; }                        //Absolute indexed X - $0000+X\n    absY() {\n        if ((this.operand + this.Y) > 0xFF) this.cycle++;\n        return this.readWord() + this.Y; }                        //Absolute indexed Y - $0000+Y\n    \n    ind() {\n        let indirect = this.readWord();\n        return this.read(indirect) + this.read(indirect+1)*256; } //Indirect - ($0000)\n    indX() {\n        let indirect = wrapByte(this.operand + this.X);\n        return this.read(indirect) + this.read(indirect+1)*256; } //Indirect indexed X - ($00+X)\n    indY() {\n        let indirect = this.read(this.operand) + this.read(this.operand+1)*256;\n        if ((wrapByte(indirect) + this.Y) > 0xFF) this.cycle++;\n        return indirect + this.Y; }                               //Indirect indexed Y - ($00)+Y\n    \n    //== OpCodes ====================================================//\n    \n    // Jump, subroutine and interrupt\n    BRK(fnFetchOperand) { //Interrupt\n        this.pushWord(this.PC);\n        this.pushByte(this.P);\n        this.Interrupt = true;\n        this.PC = fnFetchOperand(this.irqVector());\n    }\n    RTI(fnFetchOperand) { //Return from Interrupt\n        this.P = this.pullByte();\n        this.PC = fnFetchOperand(this.pullWord());\n    }\n    JSR(fnFetchOperand) { //Jump to Subroutine\n        this.pushWord(this.PC);\n        this.PC = fnFetchOperand();\n    }\n    RTS(fnFetchOperand) { //Return from Subroutine\n        this.PC = fnFetchOperand(this.pullWord() + 1);\n    }\n    JMP(fnFetchOperand) { //Jump to\n        this.PC = fnFetchOperand();\n    }\n    \n    // Branching\n    BPL(fnFetchOperand) { //Branch if Positive\n        if (!this.Negative)\n            this.PC += fnFetchOperand();\n    }\n    BMI(fnFetchOperand) { //Branch if Negative\n        if (this.Negative)\n            this.PC += fnFetchOperand();\n    }\n    BVC(fnFetchOperand) { //Branch if oVerflow Clear\n        if (!this.Overflow)\n            this.PC += fnFetchOperand();\n    }\n    BVS(fnFetchOperand) { //Branch if oVerflow Set\n        if (this.Overflow)\n            this.PC += fnFetchOperand();\n    }\n    BCC(fnFetchOperand) { //Branch if Carry Clear\n        if (!this.Carry)\n            this.PC += fnFetchOperand();\n    }\n    BCS(fnFetchOperand) { //Branch if Carry Set\n        if (this.Carry)\n            this.PC += fnFetchOperand();\n    }\n    BNE(fnFetchOperand) { //Branch if Not Equal\n        if (!this.Zero)\n            this.PC += fnFetchOperand();\n    }\n    BEQ(fnFetchOperand) { //Branch if Equal\n        if (this.Zero)\n            this.PC += fnFetchOperand();\n    }\n    \n    // Stack\n    PHA(fnFetchOperand) { this.pushByte(fnFetchOperand(this.A)); } //Push Accumulator\n    PHP(fnFetchOperand) { this.pushByte(fnFetchOperand(this.P)); } //Push Processor Status\n    PLA(fnFetchOperand) { this.A = fnFetchOperand(this.pullByte()); } //Pull Accumulator\n    PLP(fnFetchOperand) { this.P = fnFetchOperand(this.pullByte()); } //Pull Processor Status\n    \n    // Status flags\n    CLC(fnFetchOperand) { fnFetchOperand(this.Carry = false); }\n    CLD(fnFetchOperand) { fnFetchOperand(this.Decimal = false); }\n    CLI(fnFetchOperand) { fnFetchOperand(this.Interrupt = false); }\n    CLV(fnFetchOperand) { fnFetchOperand(this.Overflow = false); }\n    \n    SEC(fnFetchOperand) { fnFetchOperand(this.Carry = true); }\n    SED(fnFetchOperand) { fnFetchOperand(this.Decimal = true); }\n    SEI(fnFetchOperand) { fnFetchOperand(this.Interrupt = true); }\n    \n    // Register transfert\n    TAX(fnFetchOperand) { fnFetchOperand(this.X = this.A); }  //Transfert A to X\n    TXA(fnFetchOperand) { fnFetchOperand(this.A = this.X); }  //Transfert X to A\n    TAY(fnFetchOperand) { fnFetchOperand(this.Y = this.A); }  //Transfert A to Y\n    TYA(fnFetchOperand) { fnFetchOperand(this.A = this.Y); }  //Transfert Y to A\n    TSX(fnFetchOperand) { fnFetchOperand(this.X = this.SP); } //Transfert SP to X\n    TXS(fnFetchOperand) { fnFetchOperand(this.SP = this.X); } //Transfert X to SP\n    \n    // Move operations\n    LDA(fnFetchOperand) { this.A = this.read(fnFetchOperand()); } //Load Accumulator\n    LDX(fnFetchOperand) { this.X = this.read(fnFetchOperand()); } //Load X\n    LDY(fnFetchOperand) { this.Y = this.read(fnFetchOperand()); } //Load Y\n    STA(fnFetchOperand) { this.write(fnFetchOperand(), this.A); } //Store Accumulator\n    STX(fnFetchOperand) { this.write(fnFetchOperand(), this.X); } //Store X\n    STY(fnFetchOperand) { this.write(fnFetchOperand(), this.Y); } //Store Y\n    \n    // Arithmetic operations\n    ADC(fnFetchOperand) { this.add(this.A, this.read(fnFetchOperand()));      } //Add with Carry\n    SBC(fnFetchOperand) { this.add(this.A, 0xFF-this.read(fnFetchOperand())); } //Subtract with Carry\n    add(reg, operand) {\n        let alu = reg + operand + this.Carry;\n        this.Carry = false;\n        this.Overflow = (reg^alu) & (operand^alu) & 0x80;\n        this.A = alu;\n    }\n    \n    ASL(fnFetchOperand) { //Arithmetic Shift Left\n        let operand;\n        if (this.opcode === 0x0A) { //Opcode $0A is implied\n            operand = fnFetchOperand(this.A);\n            this.A = operand * 2;\n        } else {\n            let address = fnFetchOperand();\n            operand = this.read(address);\n            this.write(address, this.ALU(operand * 2));\n        }\n        this.Carry = (operand & 0x80);\n    }\n    LSR(fnFetchOperand) { //Logical Shift Right\n        let operand;\n        if (this.opcode === 0x4A) { //Opcode $4A is implied\n            operand = fnFetchOperand(this.A);\n            this.A = operand >>> 1;\n        } else {\n            let address = fnFetchOperand();\n            operand = this.read(address);\n            this.write(address, this.ALU(operand >>> 1));\n        }\n        this.Carry = (operand & 0x01);\n    }\n    ROL(fnFetchOperand) { //Rotate Left\n        let operand;\n        if (this.opcode === 0x2A) { //Opcode $2A is implied\n            operand = fnFetchOperand(this.A);\n            this.A = operand * 2 + this.Carry;\n        } else {\n            let address = fnFetchOperand();\n            operand = this.read(address);\n            this.write(address, this.ALU(operand * 2 + this.Carry));\n        }\n        this.Carry = (operand & 0x80);\n    }\n    ROR(fnFetchOperand) { //Rotate Right\n        let operand;\n        if (this.opcode === 0x6A) { //Opcode $6A is implied\n            operand = fnFetchOperand(this.A);\n            this.A = (operand >>> 1) + this.Carry*128;\n        } else {\n            let address = fnFetchOperand();\n            operand = this.read(address);\n            this.write(address, this.ALU((operand >>> 1) + this.Carry*128));\n        }\n        this.Carry = (operand & 0x01);\n    }\n    \n    INC(fnFetchOperand) { //Increment memory\n        let address = fnFetchOperand();\n        this.write(address, this.ALU(this.read(address) + 1));\n    }\n    DEC(fnFetchOperand) { //Decrement memory\n        let address = fnFetchOperand();\n        this.write(address, this.ALU(this.read(address) - 1));\n    }\n    INX(fnFetchOperand) { this.X = fnFetchOperand(this.X) + 1; } //Increment X\n    DEX(fnFetchOperand) { this.X = fnFetchOperand(this.X) - 1; } //Decrement X\n    INY(fnFetchOperand) { this.Y = fnFetchOperand(this.Y) + 1; } //Increment Y\n    DEY(fnFetchOperand) { this.Y = fnFetchOperand(this.Y) - 1; } //Decrement Y\n    \n    BIT(fnFetchOperand) { //Bit test\n        let operand = this.read(fnFetchOperand());\n        this.Negative = (operand >= 0x80);\n        if (this.Negative) {\n            this.Overflow = (operand >= 0xC0);\n        } else {\n            this.Overflow = (operand >= 0x40);\n        }\n        this.Zero = !(this.A & operand);\n    }\n    \n    CMP(fnFetchOperand) { this.compare(this.A, this.read(fnFetchOperand())); } //Compare with Accumulator\n    CPX(fnFetchOperand) { this.compare(this.X, this.read(fnFetchOperand())); } //Compare with X\n    CPY(fnFetchOperand) { this.compare(this.Y, this.read(fnFetchOperand())); } //Compare with Y\n    compare(reg, operand) {\n        this.ALU(reg + (0x100-operand));\n        this.Carry = (reg >= operand);\n    }\n    \n    // Logical operations\n    ORA(fnFetchOperand) { this.A = this.A | this.read(fnFetchOperand()); } //Logical OR\n    AND(fnFetchOperand) { this.A = this.A & this.read(fnFetchOperand()); } //Logical AND\n    EOR(fnFetchOperand) { this.A = this.A ^ this.read(fnFetchOperand()); } //Exclusive OR\n    \n    // Others\n    NOP(fnFetchOperand) { fnFetchOperand(); }\n    KIL(fnFetchOperand) { this.doReset(); } // eslint-disable-line no-unused-vars\n}\n \nexport default CPU;","export const pxlColors = new Uint32Array([\n    0xFF545454, 0xFF741E00, 0xFF901008, 0xFF880030, 0xFF640044, 0xFF30005C, 0xFF000454, 0xFF00183C,\n    0xFF002A20, 0xFF003A08, 0xFF004000, 0xFF003C00, 0xFF3C3200, 0xFF000000, 0xFF000000, 0xFF000000,\n    0xFF989698, 0xFFC44C08, 0xFFEC3230, 0xFFE41E5C, 0xFFB01488, 0xFF6414A0, 0xFF202298, 0xFF003C78,\n    0xFF005A54, 0xFF007228, 0xFF007C08, 0xFF287600, 0xFF786600, 0xFF000000, 0xFF000000, 0xFF000000,\n    0xFFECEEEC, 0xFFEC9A4C, 0xFFEC7C78, 0xFFEC62B0, 0xFFEC54E4, 0xFFB458EC, 0xFF646AEC, 0xFF2088D4,\n    0xFF00AAA0, 0xFF00C474, 0xFF20D04C, 0xFF6CCC38, 0xFFCCB438, 0xFF3C3C3C, 0xFF000000, 0xFF000000,\n    0xFFECEEEC, 0xFFECCCA8, 0xFFECBCBC, 0xFFECB2D4, 0xFFECAEEC, 0xFFD4AEEC, 0xFFB0B4EC, 0xFF90C4E4,\n    0xFF78D2CC, 0xFF78DEB4, 0xFF90E2A8, 0xFFB4E298, 0xFFE4D6A0, 0xFFA0A2A0, 0xFF000000, 0xFF000000\n]);\nexport const cssColors = [\n    '#545454', '#001E74', '#081090', '#300088', '#440064', '#5C0030', '#540400', '#3C1800',\n    '#202A00', '#083A00', '#004000', '#003C00', '#00323C', '#000000', '#000000', '#000000',\n    '#989698', '#084CC4', '#3032EC', '#5C1EE4', '#8814B0', '#A01464', '#982220', '#783C00',\n    '#545A00', '#287200', '#087C00', '#007628', '#006678', '#000000', '#000000', '#000000',\n    '#ECEEEC', '#4C9AEC', '#787CEC', '#B062EC', '#E454EC', '#EC58B4', '#EC6A64', '#D48820',\n    '#A0AA00', '#74C400', '#4CD020', '#38CC6C', '#38B4CC', '#3C3C3C', '#000000', '#000000',\n    '#ECEEEC', '#A8CCEC', '#BCBCEC', '#D4B2EC', '#ECAEEC', '#ECAED4', '#ECB4B0', '#E4C490',\n    '#CCD278', '#B4DE78', '#A8E290', '#98E2B4', '#A0D6E4', '#A0A2A0', '#000000', '#000000'\n];\n","export class VideoBuffer {\n    constructor(width, height) {\n        this.width  = width;\n        this.height = height;\n        \n        this.createNewBuffer();\n    }\n    \n    createNewBuffer() {\n        if (typeof ImageData === 'function') {\n            this.image = new ImageData(this.width, this.height);\n            this.data  = new Uint32Array(this.image.data.buffer);\n        } else {\n            this.image = null;\n            this.data  = new Uint32Array(this.width * this.height);\n        }\n    }\n    \n    //===============================================================//\n    writePixels(x, y, values) {\n        this.data.set(values, y*this.width + x);\n    }\n    \n    getFrame() {\n        let frame = this.image;\n        this.createNewBuffer();\n        return frame;\n    }\n}\n\nexport default VideoBuffer;\n","export class VideoOutput {\n    constructor() {\n        this.canvas  = null;\n        this.context = null;\n        \n        this.layers = [];\n    }\n    \n    get connected()    { return !!this.canvas; }\n    get disconnected() { return  !this.canvas; }\n    \n    connect(output) {\n        if (output && output.nodeName === 'CANVAS') {\n            this.canvas = output;\n            \n            this.width  = output.width;\n            this.height = output.height;\n            \n            return output;\n        } else {\n            return this.disconnect();\n        }\n    }\n    disconnect() {\n        return this.canvas = null;\n    }\n    \n    //===============================================================//\n    \n    addLayer(videoBuffer) {\n        this.layers.push(videoBuffer);\n    }\n    \n    start() {\n        if (this.canvas) {\n            this.context = this.canvas.getContext('2d', {alpha: false});\n            this.context.imageSmoothingEnabled = false;\n            \n            this.offCanvas = document.createElement('canvas');\n            this.offCanvas.width  = 256;\n            this.offCanvas.height = 240;\n            this.offContext = this.offCanvas.getContext('2d', {alpha: true});\n            this.offContext.imageSmoothingEnabled = false;\n        }\n    }\n    \n    stop() {\n        if (this.canvas) {\n            window.cancelAnimationFrame(this.scheduled);\n            \n            this.layers = [];\n            \n            this.context = null;\n            \n            this.offCanvas.remove();\n            this.offContext = null;\n        }\n    }\n    \n    //===============================================================//\n    \n    schedule(cssBackdrop) {\n        const layers = this.layers.map((layer) => layer.getFrame());\n        \n        this.scheduled = window.requestAnimationFrame(() => {\n            this.context.fillStyle = cssBackdrop;\n            this.context.fillRect(0, 0, this.width, this.height);\n            \n            layers.forEach((layer) => {\n                this.offContext.putImageData(layer, 0, 0);\n                this.context.drawImage(this.offCanvas, 0, 0, 256, 240, 0, 0, this.width, this.height);\n            });\n        });\n    }\n}\n\nexport default VideoOutput;\n","import { VideoBuffer, Colors } from './Video.js';\nconst { pxlColors, cssColors } = Colors;\n\nconst bitplaneLookup = {\n    0:     0, // 0x0000\n    32768: 1, // 0x8000\n    128:   2, // 0x0080\n    32896: 3, // 0x8080\n};\n\nexport class PPU {\n    constructor(nes) {\n        this.bus = nes;\n        \n        this.vblank = false;\n        \n        //Internal Video RAM (or Character Internal RAM (CI-RAM) )\n        this.vram = new Uint8Array(0x800);\n        this.vramBank = [this.vram.subarray(0x000, 0x400), this.vram.subarray(0x400, 0x800)];\n        \n        //Object Attribute Memory\n        this.oamPrimary   = new Uint8Array(64*4);\n        this.oamSecondary = new Uint8Array(8*4);\n        this.oamAddress = 0; //For accessing primary OAM through $2004 and DMA\n        this.oamIndex   = 0; //For internal access to secondary OAM\n        \n        //Palettes\n        this.palette = [new Uint8Array(4*4), new Uint8Array(4*4)];\n        \n        //Buffers\n        this.bkgPixelsBuffer = new Uint32Array(16);\n        this.sprPixelsBuffer = new Uint32Array(8);\n        \n        //Layers\n        this.bkgLayer        = new VideoBuffer(264, 256);\n        this.sprBehindLayer  = new VideoBuffer(264, 256);\n        this.sprInFrontLayer = new VideoBuffer(264, 256);\n        this.sprLayer        = this.sprInFrontLayer;\n        \n        //Used for Sprite0 hit detection\n        this.sprite0Layer = new Uint32Array(264);\n        \n        this.isPowered = false;\n    }\n    \n    powerOn() {\n        this.control    = null; //$2000 Control\n        this.mask       = null; //$2001 Mask\n        this.status     = null; //$2002 Status\n        this.OAMAddress = null; //$2003 OAM address\n        this.oamPrimary.fill(0);//$2004 OAM data\n        this.scroll     = null; //$2005 Scroll\n        this.address    = null; //$2006 Address\n        this.data       = null; //$2007 Data\n        \n        this.ntsc = (this.bus.cartConnector.tvSystem === \"NTSC\");\n        \n        //Bus access optimizations\n        this.cpu    = this.bus.cpu;\n        this.cart   = this.bus.cartConnector.cartridge;\n        this.output = this.bus.videoOutput;\n        \n        this.output.addLayer(this.sprBehindLayer);\n        this.output.addLayer(this.bkgLayer);\n        this.output.addLayer(this.sprInFrontLayer);\n        this.output.start();\n        \n        this.isPowered = true;\n    }\n    powerOff() {\n        this.output.stop();\n        \n        this.isPowered = false;\n    }\n    \n    reset() {\n        this.control = null; //$2000 Control Register\n        this.mask    = null; //$2001 Mask Register\n        this.scroll  = null; //$2005 Scroll Register\n        this.data    = null; //$2007 Data Register\n    }\n    \n    //== Vertical Blank =============================================//\n    doVBlank() {\n        this.vblank = true;\n        if (this.nmiEnabled) this.cpu.doNMI();\n    }\n    endVBlank() {\n        this.status = null;\n    }\n    \n    //== Registers ==================================================//\n    //= 0x2000 Control =//\n    set control(value) {\n        if (value !== null) {\n            this.addressBuffer &= ~0x0C00; // b1111.0011.1111.1111\n            this.addressBuffer |= (value & 0x3)<<10;\n            \n            this.addressIncrement = (value & 0x04) ? 32 : 1;\n            this.sprPatternTable =  (value & 0x08) ? 0x1000 : 0x0000;\n            this.bkgPatternTable =  (value & 0x10) ? 0x1000 : 0x0000;\n            this.sprite8x16 =     !!(value & 0x20);\n            this.nmiEnabled =     !!(value & 0x80);\n        } else {\n            this.addressIncrement = 1;     //[1,32]\n            this.sprPatternTable = 0x0000; //[0x0000,0x1000]\n            this.bkgPatternTable = 0x0000; //[0x0000,0x1000]\n            this.sprite8x16 = false;\n            this.nmiEnabled = false;\n        }\n        this.spriteHeight = this.sprite8x16 ? 16 : 8;\n    }\n    \n    //= 0x2001 Mask =//\n    set mask(value) {\n        if (value) {\n            this.grayscale       = !!(value & 0x01);\n            this.showLeftMostBkg = !!(value & 0x02);\n            this.showLeftMostSpr = !!(value & 0x04);\n            this.showBackground  = !!(value & 0x08);\n            this.showSprites     = !!(value & 0x10);\n            this.emphasizeRed    = !!(value & (this.ntsc ? 0x20 : 0x40));\n            this.emphasizeGreen  = !!(value & (this.ntsc ? 0x40 : 0x20));\n            this.emphasizeBlue   = !!(value & 0x80);\n            \n            this.renderingEnabled = !!(value & 0x18);\n        } else {\n            this.grayscale       = false;\n            this.showLeftMostBkg = false;\n            this.showLeftMostSpr = false;\n            this.showBackground  = false;\n            this.showSprites     = false;\n            this.emphasizeRed    = false;\n            this.emphasizeGreen  = false;\n            this.emphasizeBlue   = false;\n            \n            this.renderingEnabled = false;\n        }\n    }\n        \n    //= 0x2002 Status =//\n    get status() {\n        let value = (this.spriteOverflow && 0x20) |\n                    (this.sprite0Hit && 0x40) |\n                    (this.vblank && 0x80);\n        this.vblank = false;\n        this.writeToggle = false;\n        \n        return value;\n    }\n    set status(value) {\n        this.spriteOverflow = false;\n        this.sprite0Hit = false;\n        this.sprite0 = false;\n        this.vblank = false;\n    }\n    \n    //= 0x2003 OAM address =//\n    set OAMAddress(value) {\n        this.oamAddress = value || 0x00;\n    }\n    \n    //= 0x2004 OAM data =//\n    get OAMData() {\n        return this.oamPrimary[this.oamAddress];\n    }\n    set OAMData(value) {\n        this.oamPrimary[this.oamAddress++] = value;\n        if (this.oamAddress > 0xFF) this.oamAddress = 0x00;\n    }\n    \n    //= 0x2005 Scroll =//\n    set scroll(value) {\n        if (value !== null) {\n            let toggle = this.writeToggle;\n            let addressBuffer = this.addressBuffer;\n            if (toggle) {\n                // Vertical scroll\n                addressBuffer &= 0x0C1F; // b0000.1100.0001.1111\n                addressBuffer |= ((value & 0x07) << 12);\n                addressBuffer |= ((value & 0xF8) << 2);\n                \n                this.fineScrollY = value & 0x07;\n            } else {\n                // Horizontal scroll\n                addressBuffer &= 0x7FE0; // b0111.1111.1110.0000\n                addressBuffer |= (value >>> 3);\n                \n                this.fineScrollX = value & 0x07;\n            }\n            this.addressBuffer = addressBuffer;\n            this.writeToggle = !toggle;\n        } else {\n            this.writeToggle = false;\n            this.fineScrollX = 0x0;\n            this.fineScrollY = 0x0;\n        }\n    }\n    \n    //= 0x2006 Address =//\n    set address(value) {\n        if (value !== null) {\n            let toggle = this.writeToggle;\n            if (toggle) {\n                this.addressBuffer = (this.addressBuffer & 0xff00) | value;\n                this.addressBus = this.addressBuffer;\n            } else {\n                value = (value & 0x3f) << 8;\n                this.addressBuffer = (this.addressBuffer & 0x00ff) | value;\n            }\n            this.writeToggle = !toggle;\n        } else {\n            this.writeToggle = false;\n            this.addressBus = this.addressBuffer = 0x0000;\n        }\n    }\n    \n    //= 0x2007 Data =//\n    get data() {\n        let value;\n        let address = this.addressBus;\n        \n        if (address >= 0x3F00)\n            value = this.readPalette(address);\n        else\n            value = this.readBuffer;\n        \n        this.readBuffer = this.read(address);\n        this.addressBus = address + this.addressIncrement;\n        \n        return value;\n    }\n    set data(value) {\n        if (value !== null) {\n            let address = this.addressBus;\n            if (address >= 0x3F00)\n                this.writePalette(address, value);\n            else\n                this.write(address, value);\n            \n            this.addressBus = address + this.addressIncrement;\n        } else\n            this.readBuffer = 0x00;\n    }\n    \n    //== Registers access ===========================================//\n    readRegister(address) {\n        if (address > 0x2007) address &= 0x2007;\n        switch (address) {\n        case 0x2002: return this.status;\n        case 0x2004: return this.OAMData;\n        case 0x2007: return this.data;\n        default:     return 0x00;\n        }\n    }\n    writeRegister(address, data) {\n        if (address > 0x2007) address &= 0x2007;\n        switch (address) {\n        case 0x2000: this.control    = data; break;\n        case 0x2001: this.mask       = data; break;\n        case 0x2003: this.OAMAddress = data; break;\n        case 0x2004: this.OAMData    = data; break;\n        case 0x2005: this.scroll     = data; break;\n        case 0x2006: this.address    = data; break;\n        case 0x2007: this.data       = data; break;\n        }\n    }\n    \n    //== Data =======================================================//\n    read(address) {\n        let cartridge = this.cart;\n        if (cartridge.ciramEnabled(address))\n            return this.vramBank[cartridge.ciramA10(address) ? 1 : 0][address & 0x3FF];\n        else\n            return cartridge.ppuRead(address);\n    }\n    write(address, data) {\n        let cartridge = this.cart;\n        if (cartridge.ciramEnabled(address))\n            this.vramBank[cartridge.ciramA10(address) ? 1 : 0][address & 0x3FF] = data;\n        else\n            cartridge.ppuWrite(address, data);\n    }\n    \n    //== Palettes ===================================================//\n    get backdrop() { return this.palette[0][0]; }\n    \n    get bkgPalette() { return this.palette[0]; }\n    get sprPalette() { return this.palette[1]; }\n    \n    readPalette(address) {\n        if (address & 0x3)\n            return this.palette[(address & 0x10) >>> 4][address & 0x0F];\n        else\n            return this.palette[0][0x00];\n    }\n    writePalette(address, data) {\n        if (address & 0x3)\n            this.palette[(address & 0x10) >>> 4][address & 0x0F] = data;\n        else\n            this.palette[0][address & 0x0F] = data;\n    }\n    \n    //== Scrolling ==================================================//\n    incrementX() {\n        if (!this.renderingEnabled) return;\n        \n        let addressBus = this.addressBus;\n        if ((addressBus & 0x001F) === 31) {\n            addressBus &= 0x7FE0; // b0111.1111.1110.0000\n            addressBus ^= 0x0400; // b0000.0100.0000.0000\n        } else {\n            addressBus++;\n        }\n        this.addressBus = addressBus;\n    }\n    incrementY() {\n        if (!this.renderingEnabled) return;\n        \n        let addressBus = this.addressBus;\n        if (addressBus < 0x7000) {\n            addressBus += 0x1000;\n            this.fineScrollY++;\n        } else {\n            addressBus -= 0x7000; \n            \n            let coarseY = (addressBus & 0x03E0);\n            if (coarseY === 0x03A0) { // 29 << 5\n                addressBus &= 0x0C1F;\n                addressBus ^= 0x0800;\n            } else\n            if (coarseY === 0x03E0)   // 31 << 5\n                addressBus &= 0xFC1F;\n            else\n                addressBus += 0x0020;\n            \n            this.fineScrollY = addressBus >>> 12;\n        }\n        this.addressBus = addressBus;\n    }\n    \n    resetX() {\n        if (!this.renderingEnabled) return;\n        \n        let addressBus = this.addressBus;            //  _yyy.nnYY.YYYX.XXXX\n        addressBus &= 0x7BE0;                        // b0111.1011.1110.0000\n        addressBus |= (this.addressBuffer & 0x041F); // b0000.0100.0001.1111\n        this.addressBus = addressBus;\n    }\n    resetY() {\n        if (!this.renderingEnabled) return;\n        \n        let addressBus = this.addressBus;            //  _yyy.nnYY.YYYX.XXXX\n        addressBus &= 0x041F;                        // b0000.0100.0001.1111\n        addressBus |= (this.addressBuffer & 0x7BE0); // b0111.1011.1110.0000\n        this.addressBus = addressBus;\n        \n        this.fineScrollY = addressBus >>> 12;\n    }\n    \n    //== Background =================================================//\n    fetchNameTable(bus) {\n        let address = 0x2000 + (bus & 0x0FFF);\n        return this.read(address);\n    }\n    fetchAttributeTable(bus) {\n        let address = 0x23C0 | (bus & 0x0C00) | (bus>>>4 & 0x0038) | (bus>>>2 & 0x0007);\n        let offset = 0;\n        if (bus & 0x0002) offset += 2;\n        if (bus & 0x0040) offset += 4;\n        return (this.read(address) >>> offset) & 0x3;\n    }\n    fetchBkgPatternTable(patternIndex, row) {\n        let address = this.bkgPatternTable + patternIndex*16 + row;\n        return this.read(address)*256 + this.read(address+8);\n    }\n    \n    fetchTile() {\n        if (!this.showBackground) return;\n\n        let addressBus = this.addressBus;\n        \n        let patternIndex = this.fetchNameTable(addressBus);\n        let paletteIndex = this.fetchAttributeTable(addressBus);\n        let pattern      = this.fetchBkgPatternTable(patternIndex, this.fineScrollY);\n        \n        this.bkgPixelsBuffer.copyWithin(0, 8);\n        this.setPatternPixels(this.bkgPixelsBuffer.subarray(8), pattern, this.bkgPalette, paletteIndex);\n    }\n    \n    fetchNullTile() {\n        if (!this.showBackground) return;\n        \n        let addressBus = this.addressBus;\n        let patternIndex = this.fetchNameTable(addressBus);\n        this.fetchAttributeTable(addressBus);\n        this.fetchBkgPatternTable(patternIndex, this.fineScrollY);\n    }\n    fetchNullNTs() {\n        if (!this.showBackground) return;\n        \n        let addressBus = this.addressBus;\n        this.fetchNameTable(addressBus);\n        this.fetchNameTable(addressBus);\n    }\n    \n    renderTile(dot, scanline) {\n        if (!this.showBackground) return;\n        \n        let offset = this.fineScrollX;\n        let pixels = this.bkgPixelsBuffer.subarray(offset, offset+8);\n        \n        if (this.sprite0 && !this.sprite0Hit) {\n            if (this.sprite0Layer.subarray(dot, dot+8).some((e,i) => (e && pixels[i])))\n                this.sprite0Hit = true;\n        }\n        \n        this.bkgLayer.writePixels(dot, scanline, pixels);\n    }\n    \n    //== Sprites ====================================================//\n    clearSecondaryOAM() {\n        this.oamSecondary.fill(0xFF);\n        this.oamIndex = 0;\n    }\n    evaluateSprites(scanline) {\n        let spritesList = this.oamPrimary;\n        let sprites     = this.oamSecondary;\n        \n        let height = this.spriteHeight;\n        \n        while (this.oamAddress < 256) {\n            let y = spritesList[this.oamAddress];\n            \n            let top    = y + height; //Sprite's coordinates are bottom-left\n            let bottom = y;\n            \n            if (this.oamIndex === 32) {\n                this.oamAddress++; //This causes the 'Sprite overflow bug'\n                this.oamIndex++;\n            } else {\n                if (this.oamIndex < 32)\n                    sprites[this.oamIndex] = y;\n                if (scanline >= bottom && scanline < top) {\n                    if (this.oamIndex < 32) {\n                        if (this.oamAddress === 0)\n                            this.sprite0 = true;\n                        for (let i=1; i<4; i++)\n                            sprites[this.oamIndex+i] = spritesList[this.oamAddress+i];\n                        this.oamIndex += 4;\n                    } else {\n                        this.spriteOverflow = true;\n                        break;\n                    }\n                }\n                this.oamAddress += 4;\n            }\n        }\n        this.oamIndex = 0;\n    }\n    \n    fetchSprPatternTable(patternIndex, row) {\n        let offset = this.sprPatternTable;\n        if (this.sprite8x16) {\n            offset = (patternIndex & 0x1) << 12;\n            patternIndex &= 0xFE;\n        }\n        let address = offset + patternIndex*16 + row;\n        return this.read(address)*256 + this.read(address+8);\n    }\n    \n    fetchSprite(scanline) {\n        if (!this.showSprites) return;\n        \n        let addressBus = this.addressBus;     //\n        this.fetchNameTable(addressBus);      // Garbage fetch\n        this.fetchAttributeTable(addressBus); //\n        \n        this.oamAddress = 0x00;\n        \n        let sprites = this.oamSecondary;\n        \n        if (this.sprite0)\n            this.sprite0 = (this.oamIndex === 0);\n        \n        let y = sprites[this.oamIndex++];\n        let row = scanline - y;\n        \n        let patternIndex = sprites[this.oamIndex++];\n        let attributes   = sprites[this.oamIndex++];\n        \n        // Vertical Flip\n        if (attributes >= 0x80) {\n            row = this.spriteHeight - row - 1;\n            attributes -= 0x80;\n        }\n        \n        let flip;\n        // Horizontal Flip\n        if (attributes >= 0x40) {\n            flip = true;\n            attributes -= 0x40;\n        }\n        \n        // Behind Background\n        if (attributes >= 0x20) {\n            this.sprLayer = this.sprBehindLayer;\n            attributes -= 0x20;\n        } else\n            this.sprLayer = this.sprInFrontLayer;\n        \n        // 8x16 Sprites\n        if (row >= 8) {\n            row -= 8;\n            patternIndex++;\n        }\n        \n        let pattern = this.fetchSprPatternTable(patternIndex, row);\n        this.setPatternPixels(this.sprPixelsBuffer, pattern, this.sprPalette, attributes, flip);\n    }\n        \n    fetchNullSprite() {\n        if (!this.showSprites) return;\n        \n        let addressBus = this.addressBus;\n        this.fetchNameTable(addressBus);\n        this.fetchAttributeTable(addressBus);\n        \n        this.fetchSprPatternTable(this.sprPatternTable, 0xFF);\n    }\n    \n    renderSprite(scanline) {\n        if (!this.showSprites) return;\n        \n        let x = this.oamSecondary[this.oamIndex++];\n        let pixels = this.sprPixelsBuffer;\n        \n        if (this.sprite0)\n            this.sprite0Layer.fill(0).set(pixels, x);\n        \n        this.sprLayer.writePixels(x, scanline+1, pixels);\n    }\n    \n    //== Pixels Rendering ===========================================//\n    setPatternPixels(target, pattern, palette, paletteIndex, flip) {\n        if (paletteIndex >= 4) paletteIndex %= 4;\n        let paletteOffset = paletteIndex * 4;\n        \n        for (let offset = 0; offset < 8; offset++) {\n            let colorIndex = bitplaneLookup[(pattern << offset) & 0x8080];\n            target[flip ? 7-offset : offset] = colorIndex ? pxlColors[palette[paletteOffset + colorIndex]] : 0x00000000;\n        }\n    }\n    //== Output =====================================================//\n    printFrame() {\n        this.output.schedule(cssColors[this.backdrop]);\n    }\n}\n\nexport default PPU;\n","const frameTime = 1000/60;\n\nconst renderLines = 239;\nconst vblankStart = 241;\nconst vblankEnd   = 261;\n\nconst cyclesPerScanline = 341/3;\nconst cyclesPerFrame    = (341*261 + 340.5)/3;\n\nconst cyclesBeforeVBlankStart   = vblankStart * cyclesPerScanline;\nconst cyclesBeforeVBlankEnd     = vblankEnd * cyclesPerScanline - 8;\nconst cyclesBeforePreRenderLine = 261*cyclesPerScanline;\n\nexport class Engine {\n    constructor(nes) {\n        this.bus = nes;\n        \n        this.firstLoop = this.firstLoop.bind(this);\n        this.mainLoop  = this.mainLoop.bind(this);\n        \n        this.runningLoop = null;\n        \n        this.init();\n        \n        this.isPowered = false;\n        this.isPaused = false;\n    }\n    \n    init() {\n        this.frame = 0;\n        this.dropped = 0;\n        \n        this.fps = 60;\n        this.performance = 1.0;\n        \n        this._delta = 0.0;\n        this._lastTimestamp = 0.0;\n        this._frameTimeThisSecond = 0.0;\n        this._framesThisSecond = 0;\n        this._fps = 60;\n    }\n    \n    //=======================================================================================//\n    \n    powerOn() {\n        this.cpu = this.bus.cpu;\n        this.ppu = this.bus.ppu;\n        \n        this.init();\n        this.coldBoot();\n        \n        this.isPowered = true;\n        this.isPaused = false;\n    }\n    powerOff() {\n        clearTimeout(this.runningLoop);\n        this.runningLoop = null;\n        \n        this.isPowered = false;\n        this.isPaused = false;\n    }\n    \n    pause() {\n        if (this.isPaused) {\n            this.runningLoop = setTimeout(this.firstLoop, 0);\n            this.isPaused = false;\n        } else {\n            clearTimeout(this.runningLoop);\n            this.runningLoop = null;\n            this.isPaused = this.isPowered;\n        }\n        return this.isPaused;\n    }\n    \n    //=======================================================================================//\n    \n    coldBoot() {\n        let cpu = this.cpu;\n        let ppu = this.ppu;\n        \n        cpu.cycleOffset = 0;\n        \n        cpu.doInstructions(2279); // 1.275ms after boot\n        ppu.vblank = true;\n        cpu.doInstructions(4757); // 2.662ms after boot\n        ppu.vblank = true;\n        \n        cpu.doInstructions(cyclesBeforeVBlankStart);\n        ppu.doVBlank();\n        cpu.doInstructions(cyclesBeforeVBlankEnd);\n        ppu.endVBlank();\n        \n        this.doPreFetch(cpu, ppu, 261);\n        \n        this.runningLoop = setTimeout(this.firstLoop, 0);\n    }\n    \n    firstLoop() {\n        if (typeof window === 'undefined') return;\n        \n        let timestamp = window.performance.now();\n        \n        let cpu = this.cpu;\n        let ppu = this.ppu;\n        \n        this.doFrame(cpu, ppu);\n        \n        this.updateStats(window.performance.now() - timestamp);\n        \n        this._lastTimestamp = timestamp;\n        \n        this.runningLoop = setTimeout(this.mainLoop, 0);\n    }\n    \n    mainLoop() {\n        let timestamp = window.performance.now();\n        \n        this._delta = (timestamp - this._lastTimestamp);\n        \n        if (this._delta >= frameTime) {\n            if (this._delta > 1000) {\n                this.pause();\n                return;\n            }\n            \n            let cpu = this.cpu;\n            let ppu = this.ppu;\n            \n            while ((this._delta -= frameTime) >= frameTime) {\n                this.skipFrame(cpu, ppu);\n                this._fps--;\n            }\n            this.doFrame(cpu, ppu);\n            \n            this.updateStats(window.performance.now() - timestamp);\n            \n            this._lastTimestamp = timestamp;\n        }\n        \n        this.runningLoop = setTimeout(this.mainLoop, 0);\n    }\n    \n    updateStats(frameTime) {\n        this._frameTimeThisSecond += frameTime;\n        this._framesThisSecond++;\n        \n        if (this._framesThisSecond >= this._fps) {\n            this.performance = 1000 / this._frameTimeThisSecond;\n            this.fps = this._fps;\n            \n            this._frameTimeThisSecond = 0.0;\n            this._framesThisSecond = 0;\n            this._fps = 60;\n        }\n    }\n    \n    //=======================================================================================//\n    \n    doFrame(cpu, ppu) {\n        cpu.cycleOffset = this.frame * cyclesPerFrame;\n        \n        for (let scanline = 0; scanline <= renderLines; scanline++)\n            this.doScanline(cpu, ppu, scanline);\n        \n        cpu.doInstructions(cyclesBeforeVBlankStart);\n        \n        ppu.printFrame();\n        \n        // VBlank\n        ppu.doVBlank();\n        cpu.doInstructions(cyclesBeforeVBlankEnd);\n        ppu.endVBlank();\n        \n        // Pre-render line\n        this.doPreRenderLine(cpu, ppu);\n        \n        this.frame++;\n    }\n    \n    skipFrame(cpu, ppu) {\n        cpu.cycleOffset = this.frame * cyclesPerFrame;\n        \n        cpu.doInstructions(cyclesBeforeVBlankStart);\n        ppu.doVBlank();\n        cpu.doInstructions(cyclesBeforeVBlankEnd);\n        ppu.endVBlank();\n        cpu.doInstructions(cyclesPerFrame);\n        \n        this.frame++;\n        this.dropped++;\n    }\n    \n    doScanline(cpu, ppu, scanline) {\n        let cyclesBeforeScanline = scanline*cyclesPerScanline;\n        let dot = 0;\n        \n        ppu.clearSecondaryOAM();\n        while (dot < 64) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            ppu.renderTile(dot, scanline);\n            ppu.fetchTile();\n            ppu.incrementX();\n            dot += 8;\n        }\n        ppu.evaluateSprites(scanline);\n        while (dot < 248) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            ppu.renderTile(dot, scanline);\n            ppu.fetchTile();\n            ppu.incrementX();\n            dot += 8;\n        }\n        \n        // HBlank\n        cpu.doInstructions(cyclesBeforeScanline + dot/3);\n        ppu.renderTile(dot, scanline);\n        ppu.fetchNullTile();\n        ppu.incrementY();\n        ppu.resetX();\n        dot += 8;\n        \n        while (dot < 320) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            ppu.fetchSprite(scanline);\n            ppu.renderSprite(scanline);\n            dot += 8;\n        }\n        \n        this.doPreFetch(cpu, ppu, scanline);\n    }\n    \n    doPreRenderLine(cpu, ppu) {\n        let cyclesBeforeScanline = cyclesBeforePreRenderLine;\n        let dot = 0;\n        \n        while (dot < 256) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            ppu.fetchNullTile();\n            ppu.incrementX();\n            dot += 8;\n        }\n        ppu.incrementY();\n        ppu.resetX();\n        while (dot < 279) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            ppu.fetchNullSprite();\n            dot += 8;\n        }\n        while (dot < 304) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            ppu.fetchNullSprite();\n            ppu.resetY();\n            dot += 8;\n        }\n        while (dot < 320) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            ppu.fetchNullSprite();\n            dot += 8;\n        }\n        \n        this.doPreFetch(cpu, ppu, 261);\n    }\n    \n    doPreFetch(cpu, ppu, scanline) {\n        let cyclesBeforeScanline = scanline*cyclesPerScanline;\n        let dot = 320;\n        \n        while (dot < 336) {\n            cpu.doInstructions(cyclesBeforeScanline + dot/3);\n            // First 2 tiles of next frame's background:\n            ppu.fetchTile();\n            ppu.incrementX();\n            dot += 8;\n        }\n        ppu.fetchNullNTs();\n    }\n}\n\nexport default Engine;\n","export class Cartridge {\n    constructor(mapperNumber) {\n        if (typeof mapperNumber !== 'undefined')\n            this.mapperNumber = mapperNumber;\n        else\n            this.mapperNumber = -1;\n        \n        this.PRGRAM = new Uint8Array(0x4000);\n        this.CHRRAM = new Uint8Array(0x2000);\n        \n        this.PRGROM = [];\n        this.CHRROM = [];\n        this.PRGBank = [this.PRGRAM, this.PRGRAM];\n        this.CHRBank = [this.CHRRAM, this.CHRRAM];\n        \n        this.horiMirroring = false;\n        this.vertMirroring = false;\n        \n        this.battery = false;\n    }\n    \n    get empty()   { return this.mapperNumber < 0; }\n    get present() { return this.mapperNumber >= 0; }\n    \n    init() {\n        if (this.PRGROM.length > 0)\n            this.PRGBank = [this.PRGROM[0], this.PRGROM[this.PRGROM.length-1]];\n        else\n            this.PRGBank = [this.PRGRAM, this.PRGRAM];\n        \n        if (this.CHRROM.length === 0)\n            this.CHRROM = [this.CHRRAM.subarray(0, 0x1000), this.CHRRAM.subarray(0x1000)];\n        this.CHRBank = [this.CHRROM[0], this.CHRROM[1]];\n    }\n    \n    //== Memory access from CPU =====================================//\n    cpuRead(address) {\n        if (address >= 0xC000) {\n            return this.PRGBank[1][address - 0xC000];\n        } else if (address >= 0x8000) {\n            return this.PRGBank[0][address - 0x8000];\n        } else {\n            if (address >= 0x6000)   address -= 0x6000;\n            while (address > 0x1FFF) address -= 0x2000;\n            return this.PRGRAM[address];\n        }\n    }\n    cpuWrite(address, data) {\n        if (address >= 0x6000)   address -= 0x6000;\n        while (address > 0x1FFF) address -= 0x2000;\n        this.PRGRAM[address] = data;\n    }\n    \n    //== Memory access from PPU =====================================//\n    ppuRead(address) {\n        if (address < 0x1000)\n            return this.CHRBank[0][address];\n        else if (address < 0x2000)\n            return this.CHRBank[1][address - 0x1000];\n        else {\n            address -= 0x2000;\n            while (address > 0x0FFF) address -= 0x1000;\n            return this.CHRBank[1][address];\n        }\n    }\n    ppuWrite(address, data) {\n        while (address > 0x1FFF) address -= 0x2000;\n        this.CHRRAM[address] = data;\n    }\n    \n    //== CIRAM A10 (Pin22) ==========================================//\n    ciramA10(address) { /* eslint-disable-line no-unused-vars */\n        //Not connected by default\n        return 0x0000;\n    }\n    //== CIRAM /CE (Pin57) ==========================================//\n    ciramEnabled(address) {\n        //Connected to PPU /A13 (0x2000) by default\n        if (address < 0x2000)\n            return 0x0000;\n        else if (address < 0x4000)\n            return 0x2000;\n        else\n            return address & 0x2000;\n    }\n}\n\nexport default Cartridge;\n","import Cartridge from '../Cartridge.js';\n\nexport class NROM extends Cartridge {\n    constructor(number) {\n        super(number || 0);\n    }\n    \n    //== CIRAM A10 (Pin22) ==========================================//\n    ciramA10(address) {\n        if (address < 0x400)\n            return 0;\n        else if (this.vertMirroring)\n            return address & 0x400; //Connected to PPU A10\n        else if (address < 0x800)\n            return 0;\n        else if (this.horiMirroring)\n            return address & 0x800; //Connected to PPU A11\n        else\n            return 0;\n    }\n}\nexport default NROM;\n","import Cartridge from '../Cartridge.js';\n\nexport class MMC1 extends Cartridge {\n    constructor(number) {\n        super(number || 1);\n        \n        this.mirroring   = 0;\n        this.PRGBankMode = 3;\n        this.CHRBankMode = 0;\n        \n        this.buffer = 0;\n        this.index = 0;\n    }\n    \n    init() {\n        super.init();\n        \n        this.firstPRGBank = this.PRGROM[0];\n        this.lastPRGBank  = this.PRGROM[this.PRGROM.length-1];\n        \n        this.PRGBank[0] = this.firstPRGBank;\n        this.PRGBank[1] = this.lastPRGBank;\n    }\n    \n    //== Internal registers =========================================//\n    set control(value) {\n        this.mirroring   = (value & 0x03);\n        this.PRGBankMode = (value & 0x0C) >> 2;\n        this.CHRBankMode = (value & 0x10) >> 4;\n    }\n    \n    set CHR0(value) {\n        if (this.CHRBankMode === 1) {\n            this.CHRBank[0] = this.CHRROM[value];\n        } else {\n            let bank = value & ~1;\n            this.CHRBank[0] = this.CHRROM[bank+0];\n            this.CHRBank[1] = this.CHRROM[bank+1];\n        }\n    }\n    set CHR1(value) {\n        if (this.CHRBankMode === 1) {\n            this.CHRBank[1] = this.CHRROM[value];\n        }\n    }\n    \n    set PRG(value) {\n        while (value >= 0x10) value -= 0x10;\n        if (this.PRGBankMode === 3) {\n            this.PRGBank[0] = this.PRGROM[value];\n            this.PRGBank[1] = this.lastPRGBank;\n        } else if (this.PRGBankMode === 2) {\n            this.PRGBank[0] = this.firstPRGBank;\n            this.PRGBank[1] = this.PRGROM[value];\n        } else {\n            let bank = value & ~1;\n            this.PRGBank[0] = this.PRGROM[bank+0];\n            this.PRGBank[1] = this.PRGROM[bank+1];\n        }\n    }\n    \n    write(address, data) {\n        switch (address - 0x8000) {\n        case 0x0000: this.control = data; break;\n        case 0x2000: this.CHR0    = data; break;\n        case 0x4000: this.CHR1    = data; break;\n        case 0x6000: this.PRG     = data; break;\n        default: this.write(address & 0xE000, data);\n        }\n    }\n    \n    //== Memory access from CPU =====================================//\n    cpuWrite(address, data) {\n        if (address >= 0x8000) {\n            if (data >= 0x80) {\n                this.buffer = 0;\n                this.index = 0;\n                this.mirroring = 0;\n                this.CHRBankMode = 0;\n            } else {\n                this.buffer += ((data & 0x1) << this.index);\n                if (++this.index === 5) {\n                    this.write(address, this.buffer);\n                    this.buffer = 0;\n                    this.index = 0;\n                }\n            }\n        } else {\n            super.cpuWrite(address, data);\n        }\n    }\n    \n    //== CIRAM A10 (Pin22) ==========================================//\n    ciramA10(address) {\n        if (this.mirroring === 3) {\n            if (address < 0x800)\n                return 0;\n            else\n                return address & 0x800;\n        } else if (this.mirroring === 2) {\n            if (address < 0x400)\n                return 0;\n            else\n                return address & 0x400;\n        } else\n            return this.mirroring;\n    }\n}\nexport default MMC1;\n","export { NROM } from './Mappers/NROM.js';\nexport { MMC1 } from './Mappers/MMC1.js';\n\nexport default Object.freeze([\n    //0x00\n    \"NROM\",\"Nintendo MMC1\",\"UNROM\",\"CNROM\",\"Nintendo MMC3\",\"Nintendo MMC5\",\"FFE Rev. A\",\"ANROM\",\n    \"\",\"Nintendo MMC2\",\"Nintendo MMC4\",\"Color Dreams\",\"REX DBZ 5\",\"CPROM\",\"REX SL-1632\",\"100-in-1\",\n    //0x10\n    \"BANDAI 24C02\",\"FFE Rev. B\",\"JALECO SS880006\",\"Namcot 163\",\"\",\"Konami VRC4a/VRC4c\",\"Konami VRC2a\",\"Konami VRC2b/VRC4e\",\n    \"Konami VRC6a\",\"Konami VRC4b/VRC4d\",\"Konami VRC6b\",\"CC-21 MI HUN CHE\",\"\",\"\",\"\",\"\",\n    //0x20\n    \"IREM G-101\",\"TC0190FMC/TC0350FMR\",\"IREM I-IM/BNROM\",\"Wario Land 2\",\"TXC Policeman\",\"PAL-ZZ SMB/TETRIS/NWC\",\"Bit Corp.\",\"\",\n    \"SMB2j FDS\",\"CALTRON 6-in-1\",\"BIO MIRACLE FDS\",\"FDS SMB2j LF36\",\"MMC3 BMC PIRATE A\",\"MMC3 BMC PIRATE B\",\"RUMBLESTATION 15-in-1\",\"NES-QJ SSVB/NWC\",\n    //0x30\n    \"TAITO TCxxx\",\"MMC3 BMC PIRATE C\",\"SMB2j FDS Rev. A\",\"11-in-1 BALL SERIES\",\"MMC3 BMC PIRATE D\",\"SUPERVISION 16-in-1\",\"\",\"\",\n    \"\",\"SIMBPLE BMC PIRATE A\",\"SIMBPLE BMC PIRATE B\",\"\",\"SIMBPLE BMC PIRATE C\",\"20-in-1 KAISER Rev. A\",\"700-in-1\",\"\",\n    //0x40\n    \"TENGEN RAMBO1\",\"IREM-H3001\",\"MHROM\",\"SUNSOFT-FZII\",\"Sunsoft Mapper #4\",\"SUNSOFT-5/FME-7\",\"BA KAMEN DISCRETE\",\"CAMERICA BF9093\",\n    \"JALECO JF-17\",\"KONAMI VRC3\",\"TW MMC3+VRAM Rev. A\",\"KONAMI VRC1\",\"NAMCOT 108 Rev. A\",\"IREM LROG017\",\"Irem 74HC161/32\",\"AVE/C&E/TXC BOARD\",\n    //0x50\n    \"TAITO X1-005 Rev. A\",\"\",\"TAITO X1-017\",\"YOKO VRC Rev. B\",\"\",\"KONAMI VRC7\",\"JALECO JF-13\",\"74*139/74 DISCRETE\",\n    \"NAMCO 3433\",\"SUNSOFT-3\",\"HUMMER/JY BOARD\",\"EARLY HUMMER/JY BOARD\",\"JALECO JF-19\",\"SUNSOFT-3R\",\"HVC-UN1ROM\",\"NAMCOT 108 Rev. B\",\n    //0x60\n    \"BANDAI OEKAKIDS\",\"IREM TAM-S1\",\"\",\"VS Uni/Dual- system\",\"\",\"\",\"\",\"FDS DOKIDOKI FULL\",\n    \"\",\"NES-EVENT NWC1990\",\"SMB3 PIRATE A\",\"MAGIC CORP A\",\"FDS UNROM BOARD\",\"\",\"\",\"\",\n    //0x70\n    \"ASDER/NTDEC BOARD\",\"HACKER/SACHEN BOARD\",\"MMC3 SG PROT. A\",\"MMC3 PIRATE A\",\"MMC1/MMC3/VRC PIRATE\",\"FUTURE MEDIA BOARD\",\"TSKROM\",\"NES-TQROM\",\n    \"FDS TOBIDASE\",\"MMC3 PIRATE PROT. A\",\"\",\"MMC3 PIRATE H2288\",\"\",\"FDS LH32\",\"\",\"\",\n    //0x80\n    \"\",\"\",\"\",\"\",\"TXC/MGENIUS 22111\",\"SA72008\",\"MMC3 BMC PIRATE\",\"\",\n    \"TCU02\",\"S8259D\",\"S8259B\",\"S8259C\",\"JALECO JF-11/14\",\"S8259A\",\"UNLKS7032\",\"TCA01\",\n    //0x90\n    \"AGCI 50282\",\"SA72007\",\"SA0161M\",\"TCU01\",\"SA0037\",\"SA0036\",\"S74LS374N\",\"\",\n    \"\",\"BANDAI SRAM\",\"\",\"\",\"\",\"BANDAI BARCODE\",\"\",\"BANDAI 24C01\",\n    //0xA0\n    \"SA009\",\"\",\"\",\"\",\"\",\"\",\"SUBOR Rev. A\",\"SUBOR Rev. B\",\n    \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\n    //0xB0\n    \"BMCFK23C\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\n    //0xC0\n    \"TW MMC3+VRAM Rev. B\",\"NTDEC TC-112\",\"TW MMC3+VRAM Rev. C\",\"TW MMC3+VRAM Rev. D\",\"\",\"\",\"TW MMC3+VRAM Rev. E\",\"\",\n    \"\",\"\",\"\",\"\",\"\",\"\",\"NAMCOT 108 Rev. C\",\"TAITO X1-005 Rev. B\",\n    //0xD0\n    \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\n    \"\",\"\",\"\",\"UNLA9746\",\"Debug Mapper\",\"UNLN625092\",\"\",\"\",\n    //0xE0\n    \"\",\"\",\"BMC 22+20-in-1\",\"\",\"\",\"\",\"BMC Contra+22-in-1\",\"\",\n    \"BMC QUATTRO\",\"BMC 22+20-in-1 RST\",\"BMC MAXI\",\"\",\"\",\"\",\"UNL6035052\",\"\",\n    //0xF0\n    \"\",\"\",\"\",\"S74LS374NA\",\"DECATHLON\",\"\",\"FONG SHEN BANG\",\"\",\n    \"\",\"\",\"\",\"\",\"SAN GUO ZHI PIRATE\",\"DRAGON BALL PIRATE\",\"\",\"\",\n]);\n","import mapperNames, {\n    NROM,\n    MMC1,\n} from './Mappers.js';\n\nconst constructors = Object.freeze([\n    NROM,\n    MMC1,\n]);\n\nexport class Mapper {\n    constructor(number) {\n        return new (constructors[number] || NROM)(number);\n    }\n    \n    static supported(number) {\n        return typeof constructors[number] !== 'undefined';\n    }\n    static name(number) {\n        return mapperNames[number] || \"Unknown\";\n    }\n}\n\nexport default Mapper;\n","import Cartridge from './Cartridge.js';\nimport Mapper from \"./Mapper.js\";\n\nexport class CartConnector {\n    constructor() {\n        this.reset();\n    }\n    \n    reset() {\n        this.cartridge = new Cartridge;\n        \n        this.name = \"No Cartridge\";\n        this.tvSystem = \"NTSC\";\n        \n        this.statuses = [];\n        \n        this.fileLoaded    = false;\n        this.fileValid     = false;\n        this.fileSupported = false;\n    }\n    \n    //=======================================================================================//\n    \n    parseFilename(filename) {\n        const countryCodes = /\\((U|E|Unk|Unl|1|4|A|J|B|K|C|NL|PD|F|S|FC|SW|FN|G|UK|GR|HK|I|H)+\\)/.exec(filename);\n        if (countryCodes) {\n            if (countryCodes[0].search(/U[^Kn]|1|4|J|[^U]K|PD|FC|HK/) > 0)\n                this.tvSystem = \"NTSC\";\n            else if (countryCodes[0].search(/E|A|B|[^F]C|NL|S|SW|FN|G|UK|GR|I|H/) > 0)\n                this.tvSystem = \"PAL\";\n            else if (countryCodes[0].search(/F[^C]/) > 0)\n                this.tvSystem = \"SECAM\"; //wtf la France ?\n        }\n        \n        this.name = filename.replace(\n            /\\.[A-Za-z0-9_]+$/, \"\"\n        ).replace(\n            /\\s?\\((U|E|Unk|Unl|1|4|A|J|B|K|C|NL|PD|F|S|FC|SW|FN|G|UK|GR|HK|I|H)+\\)/g, \"\"\n        ).replace(\n            /\\s?\\[(!|a|p|b|t|f|T[+-]|h|o)+\\]/g, \"\"\n        ).replace(\n            /_+/g, \" \"\n        ).trim();\n        \n        this.name = this.name && (this.name[0].toUpperCase() + this.name.slice(1));\n    }\n    \n    parseData(data) {\n        let header = new DataView(data, 0, 0x10);\n        var offset = 0x10;\n        \n        if (header.getUint32(0) === 0x4E45531A) { //\"NES\" + MS-DOS end-of-file\n            this.statuses.push(\"iNES format\");\n            this.fileValid = true;\n        } else {\n            this.fileValid = false;\n            throw new Error(\"Invalid format\");\n        }\n        \n        let flags6 = header.getUint8(6);\n        let flags7 = header.getUint8(7);\n        \n        let mapperNumber = (flags6 >> 4) | (flags7 & 0xF0);\n        if (Mapper.supported(mapperNumber)) {\n            this.statuses.push(\n                `Mapper #${mapperNumber}: ${Mapper.name(mapperNumber)}`\n            );\n            this.fileSupported = true;\n        } else {\n            this.statuses.push(\n                `Unsupported mapper (#${mapperNumber}: ${Mapper.name(mapperNumber)})`\n            );\n            this.fileSupported = false;\n        }\n        this.cartridge = new Mapper(mapperNumber);\n        \n        if (flags6 & 0x8) {\n            this.cartridge.horiMirroring = false;\n            this.cartridge.vertMirroring = false;\n            this.statuses.push(\"4-screens scrolling\");\n        } else if (flags6 & 0x1) {\n            this.cartridge.horiMirroring = false;\n            this.cartridge.vertMirroring = true;\n            this.statuses.push(\"Horizontal scrolling\");\n        } else {\n            this.cartridge.horiMirroring = true;\n            this.cartridge.vertMirroring = false;\n            this.statuses.push(\"Vertical scrolling\");\n        }\n        \n        if (flags6 & 0x2) {\n            this.cartridge.battery = true;\n            this.statuses.push(\"Battery-backed SRAM\");\n        }\n        \n        if (flags6 & 0x4) {\n            this.cartridge.PRGRAM.set(new Uint8Array(data, offset, 0x200), 0x1000);\n            offset += 0x200;\n        }\n        \n        let numPRGBank = header.getUint8(4);\n        let numCHRBank = header.getUint8(5) * 2;\n        var skipped = 0;\n        \n        this.statuses.push(`${numPRGBank*16}kb of PRG-ROM`);\n        for (var curBank = 0; curBank < numPRGBank; curBank++) {\n            if (offset + 0x4000 > data.byteLength) {\n                skipped += 4;\n                continue;\n            }\n            this.cartridge.PRGROM.push(new Uint8Array(data, offset, 0x4000));\n            offset += 0x4000;\n        }\n        \n        this.statuses.push(`${numCHRBank*4}kb of CHR-ROM`);\n        for (curBank = 0; curBank < numCHRBank; curBank++) {\n            if (offset + 0x1000 > data.byteLength) {\n                skipped++;\n                continue;\n            }\n            this.cartridge.CHRROM.push(new Uint8Array(data, offset, 0x1000));\n            offset += 0x1000;\n        }\n        \n        if (skipped > 0) this.statuses.push(`${skipped*4}kb of data skipped...`);\n        \n        if (offset < data.byteLength) {\n            this.name = String.fromCharCode.apply(null, new Uint8Array(data, offset)).replace(/\\0/g, '');\n        }\n        \n        this.cartridge.init();\n    }\n    \n    //=======================================================================================//\n    \n    load(file) {\n        this.reset();\n        \n        return new Promise(\n            (resolve, reject) => {\n                if (file) {\n                    this.parseFilename(file.name);\n                    \n                    if (file.size) {\n                        const reader = new FileReader;\n                        reader.onabort = () => reject(new DOMException);\n                        reader.onerror = () => reject(reader.error);\n                        reader.onload = () => resolve(reader.result);\n                        \n                        reader.readAsArrayBuffer(file);\n                    } else {\n                        reject(new Error(\"File is empty\"));\n                    }\n                } else {\n                    reject(new DOMException);\n                }\n            }\n        ).then(\n            (data) => {\n                this.fileLoaded = true;\n                this.parseData(data);\n                return this;\n            }\n        ).catch(\n            (error) => {\n                if (error instanceof DOMException)\n                    this.statuses.push(\"Loading aborted\");\n                else if (error.message)\n                    this.statuses.push(error.message);\n                else\n                    this.statuses.push(\"Loading failed\");\n                \n                this.cartridge = new Cartridge;\n                return this;\n            }\n        );\n    }\n    unload() {\n        this.reset();\n        \n        return Promise.resolve(this);\n    }\n}\n\nexport default CartConnector;\n","export class Controller {\n    constructor(type) {\n        this.type = type || \"\";\n        \n        this.strobing = false;\n        this.states = new Array(8).fill(0);\n        this.strobe();\n    }\n    \n    get empty()   { return  !this.type; }\n    get present() { return !!this.type; }\n    \n    strobe() {\n        this.data = [...this.states];\n    }\n    \n    //== Input/Output ===============================================//\n    read() {\n        if (this.strobing) this.strobe();\n        \n        let data = this.data.shift();\n        return data !== undefined ? data : 1;\n    }\n    write(data) {\n        this.strobing = !!(data & 0x01);\n        if (this.strobing) this.strobe();\n    }\n}\n\nexport default Controller;\n","import Controller from \"./Controller.js\";\n\nconst BUTTONS = Object.freeze({\n    a: 0, b: 1, select: 2, start: 3, up: 4, down: 5, left: 6, right: 7\n});\n\nexport class Joypad extends Controller {\n    constructor() {\n        super(\"Joypad\");\n        \n        this.buttonHandlers = this.states.map((v, i) => (\n            (pressed) => { this.states[i] = pressed ? 1 : 0; }\n        ));\n    }\n    \n    getButtonHandler(name) {\n        let index = BUTTONS[name.toLowerCase()];\n        if (index != null)\n            return this.buttonHandlers[index];\n        else\n            throw new Error(`'${name}' is not a valid button name`);\n    }\n}\nexport default Joypad;\n","import Joypad from '../Joypad.js';\n\nconst KEYS = Object.freeze({\n    8: 'Backspace', 9: 'Tab', 13: 'Enter', 16: 'Shift', 17: 'Ctrl', 18: 'Alt', 19: 'Pause',\n    27: 'Escape', 32: 'Space', 33: 'Page-up', 34: 'Page-down', 35: 'End', 36: 'Home',\n    37: 'Left', 38: 'Up', 39: 'Right', 40: 'Down',\n    45: 'Insert', 46: 'Delete',\n    48: '0', 49: '1', 50: '2', 51: '3', 52: '4', 53: '5', 54: '6', 55: '7', 56: '8', 57: '9',\n    65: 'A', 66: 'B', 67: 'C', 68: 'D', 69: 'E', 70: 'F', 71: 'G', 72: 'H', 73: 'I',\n    74: 'J', 75: 'K', 76: 'L', 77: 'M', 78: 'N', 79: 'O', 80: 'P', 81: 'Q', 82: 'R',\n    83: 'S', 84: 'T', 85: 'U', 86: 'V', 87: 'W', 88: 'X', 89: 'Y', 90: 'Z',\n    96:  'Numpad-0',  97: 'Numpad-1',  98: 'Numpad-2',  99: 'Numpad-3', 100: 'Numpad-4',\n    101: 'Numpad-5', 102: 'Numpad-6', 103: 'Numpad-7', 104: 'Numpad-8', 105: 'Numpad-9',\n    106: 'Multiply', 107: 'Add', 109: 'Subtract', 110: 'Decimal-point', 111: 'Divide',\n    112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4',  116: 'F5',  117: 'F6',\n    118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n    186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\n    219: '[', 220: '\\\\', 221: ']', 222: '\\'',\n});\n\nexport class Keyboard extends Joypad {\n    constructor(opts) {\n        super();\n        \n        this.keyMap = {};\n        if (opts) this.assignKeys(opts);\n        \n        if (typeof window !== 'undefined') {\n            window.addEventListener('keydown', (e) => this.pressKey(e, true));\n            window.addEventListener('keyup',   (e) => this.pressKey(e, false));\n        }\n    }\n    \n    get map() {\n        return KEYS;\n    }\n    \n    assignKey(buttonName, keyCode) {\n        let handler = this.getButtonHandler(buttonName);\n        \n        Object.entries(this.keyMap).forEach(\n            ([key, value]) => { if (value === handler) delete this.keyMap[key]; }\n        );\n        this.keyMap[keyCode] = handler;\n    }\n    assignKeys(opts) {\n        Object.entries(opts).forEach(([key, value]) => this.assignKey(key, value));\n    }\n    \n    pressKey(event, keyDown) {\n        let key = event.keyCode || event.which;\n        let button = this.keyMap[key];\n        if (button) {\n            button(keyDown);\n            event.preventDefault();\n        }\n    }\n}\n\nexport default Keyboard;\n","import Controller from \"./Controller.js\";\n\nexport class CtrlConnector {\n    constructor() {\n        this.controllers = [new Controller, new Controller];\n    }\n    \n    insert(controller) {\n        if (this.controllers.indexOf(controller) > -1)\n            return controller;\n        else if (this.controllers[0].empty)\n            this.controllers[0] = controller;\n        else if (this.controllers[1].empty)\n            this.controllers[1] = controller;\n        else\n            return;\n        \n        return controller;\n    }\n    remove(controller) {\n        let index = this.controllers.indexOf(controller);\n        if (index > -1) {\n            this.controllers[index] = new Controller;\n            \n            return controller;\n        }\n    }\n}\n\nexport default CtrlConnector;\n","export class AudioOutput {\n    constructor() {\n        this.context  = null;\n        this.gainNode = null;\n    }\n    \n    get connected()    { return !!this.element; }\n    get disconnected() { return  !this.element; }\n    \n    connect(element) {\n        if (element && element.nodeName === 'INPUT') {\n            this.element = element;\n            this.value   = Number(element.value);\n            this.max     = Number(element.max) || 100;\n            \n            this.handleVolumeChange = (e) => {\n                this.value = e.target.value;\n                if (this.gainNode)\n                    this.gainNode.gain.value = this.value / this.max;\n            };\n            this.element.addEventListener('change', this.handleVolumeChange);\n            \n            return element;\n        } else {\n            return this.disconnect();\n        }\n    }\n    disconnect() {\n        if (this.element)\n            this.element.removeEventListener('change', this.handleVolumeChange);\n        this.element = null;\n        this.handleVolumeChange = undefined;\n        this.value = 0;\n        this.max = 100;\n        \n        return null;\n    }\n    \n    //===============================================================//\n    \n    start() {\n        if (typeof AudioContext === 'function') {\n            this.context = new AudioContext();\n            \n            this.gainNode = this.context.createGain();\n            this.gainNode.gain.value = this.value / this.max;\n            this.gainNode.connect(this.context.destination);\n        }\n        this.next = 0.0;\n    }\n    stop() {\n        this.gainNode = null;\n        \n        if (this.context)\n            this.context.close();\n        this.context = null;\n    }\n    \n    //===============================================================//\n    \n    schedule(buffer) {\n        if (this.context) {\n            let source = this.context.createBufferSource();\n            source.buffer = buffer;\n            source.connect(this.gainNode);\n            \n            let bufferDuration = source.buffer.duration;\n            if (this.next < this.context.currentTime) {\n                this.next = this.context.currentTime + bufferDuration;\n                source.start();\n            } else {\n                this.next += bufferDuration;\n                source.start(this.next, 0, bufferDuration);\n            }\n        }\n    }\n}\n\nexport default AudioOutput;\n","import CPU from './CPU.js';\nimport PPU from './PPU.js';\nimport Engine from './Engine.js';\nimport CartConnector from './Cartridges.js';\nimport CtrlConnector from './Controllers.js';\nimport VideoOutput from './Video.js';\nimport AudioOutput from './Audio.js';\n\nexport class NES {\n    constructor() {\n        this.cpu = new CPU(this);\n        this.apu = this.cpu.apu;\n        this.ppu = new PPU(this);\n        this.engine = new Engine(this);\n        \n        this.cartConnector = new CartConnector;\n        this.ctrlConnector = new CtrlConnector;\n        this.videoOutput = new VideoOutput;\n        this.audioOutput = new AudioOutput;\n        \n        this.isPowered = false;\n    }\n    \n    //== Buttons ============================================================================//\n    pressPower() {\n        if (!this.isPowered) {\n            this.cpu.powerOn();\n            this.ppu.powerOn();\n            \n            this.engine.powerOn();\n            \n            this.isPowered = true;\n        } else {\n            this.cpu.powerOff();\n            this.ppu.powerOff();\n            \n            this.engine.powerOff();\n            \n            this.isPowered = false;\n        }\n        return this.isPowered;\n    }\n    pressReset() {\n        this.cpu.reset();\n        this.ppu.reset();\n    }\n    \n    //== Engine =============================================================================//\n    pause() {\n        return this.engine.pause();\n    }\n    \n    //== Front red LED ======================================================================//\n    // (Yes, it is a fully-fledged part of the NES !)\n    get frontLEDState() { return this.isPowered ? this.engine.isPaused ? \"paused\" : \"on\" : \"off\"; }\n    \n    //== Cartridge ==========================================================================//\n    insertCartridge(file) {\n        return this.cartConnector.load(file);\n    }\n    removeCartridge() {\n        return this.cartConnector.unload();\n    }\n    \n    //== Controllers ========================================================================//\n    insertController(controller) {\n        return this.ctrlConnector.insert(controller);\n    }\n    removeController(controller) {\n        return this.ctrlConnector.remove(controller);\n    }\n    \n    //== Video ==============================================================================//\n    connectVideo(output) {\n        return this.videoOutput.connect(output);\n    }\n    disconnectVideo() {\n        return this.videoOutput.disconnect();\n    }\n    \n    //== Audio ==============================================================================//\n    connectAudio(output) {\n        return this.audioOutput.connect(output);\n    }\n    disconnectAudio() {\n        return this.audioOutput.disconnect();\n    }\n}\nexport default NES;\n"],"names":["AudioBuffer","output","_classCallCheck","this","context","sampleRate","bufferLength","createNewBuffer","_createClass","key","value","buffer","createBuffer","data","getChannelData","Uint8Array","index","schedule","lengths","Channel","enabled","lengthCounter","lengthCounterHalt","length","get","_enabled","set","duties","PulseChannel","_Channel","_inherits","_super","_createSuper","id","_this","call","constantVolume","envelopeEnabled","envelopeReset","envelopeCycle","envelopePeriod","envelopeVolume","envelopeLoop","dutyCycle","duty","sweepEnabled","sweepReset","sweepCycle","sweepPeriod","sweepNegate","sweepShift","timerCycle","timerPeriod","_get","_getPrototypeOf","prototype","volume","sweep","timer","_set","address","updateLength","TriangleChannel","linearCounter","linearCounterMax","linearCounterReset","dutyPosition","counter","linearCounterControl","timerPeriods","NoiseChannel","timerMode","shiftRegister","feedback","DMC","cpu","cycle","sampleAddress","sampleLength","sampleIndex","sampleLeft","sampleLoop","sampleBuffer","shiftRegisterBits","irqEnabled","irq","rate","load","doIRQ","updateSampleBuffer","updateShiftRegister","updateOutput","read","APU","bus","pulse1","pulse2","triangle","noise","dmc","audioBuffer","cyclesPerSample","cyclesUntilSample","irqDisabled","status","carry","audioOutput","start","stop","reset","counterMode","resetDelay","doQuarter","doHalf","writeRegister","count","doCycle","doSample","pulses","others","writeSample","pulsesSamples","othersSamples","Float32Array","i","cyclesLookup","wrapByte","CPU","nes","cycleOffset","apu","ram","stack","subarray","nmiVector","resetVector","irqVector","A","X","Y","P","SP","PC","addressLookup","imp","indX","zero","imm","abs","rel","indY","zeroX","absY","absX","ind","zeroY","map","fn","bind","instructionLookup","BRK","ORA","KIL","NOP","ASL","PHP","BPL","CLC","JSR","AND","BIT","ROL","PLP","BMI","SEC","RTI","EOR","LSR","PHA","JMP","BVC","CLI","RTS","ADC","ROR","PLA","BVS","SEI","STA","STY","STX","DEY","TXA","BCC","TYA","TXS","LDY","LDA","LDX","TAY","TAX","BCS","CLV","TSX","CPY","CMP","DEC","INY","DEX","BNE","CLD","CPX","SBC","INC","INX","BEQ","SED","isPowered","ppu","ctrl1","ctrlConnector","controllers","ctrl2","cart","cartConnector","cartridge","cpuRead","powerOn","powerOff","doReset","limit","cycles","doInstruction","doCycles","_this2","opcode","operand","implied","pushWord","pushByte","Interrupt","readRegister","dmaAddress","OAMData","write","cpuWrite","_SP","pullByte","_A","ALU","_X","_Y","Carry","Zero","Negative","readWord","indirect","fnFetchOperand","pullWord","Overflow","Decimal","add","reg","alu","compare","pxlColors","Uint32Array","VideoBuffer","width","height","ImageData","image","x","y","values","frame","VideoOutput","canvas","layers","nodeName","disconnect","videoBuffer","push","getContext","alpha","imageSmoothingEnabled","offCanvas","document","createElement","offContext","window","cancelAnimationFrame","scheduled","remove","cssBackdrop","layer","getFrame","requestAnimationFrame","fillStyle","fillRect","forEach","putImageData","drawImage","Colors","cssColors","bitplaneLookup","PPU","vblank","vram","vramBank","oamPrimary","oamSecondary","oamAddress","oamIndex","palette","bkgPixelsBuffer","sprPixelsBuffer","bkgLayer","sprBehindLayer","sprInFrontLayer","sprLayer","sprite0Layer","control","mask","OAMAddress","fill","scroll","ntsc","tvSystem","videoOutput","addLayer","nmiEnabled","doNMI","addressBuffer","addressIncrement","sprPatternTable","bkgPatternTable","sprite8x16","spriteHeight","grayscale","showLeftMostBkg","showLeftMostSpr","showBackground","showSprites","emphasizeRed","emphasizeGreen","emphasizeBlue","renderingEnabled","spriteOverflow","sprite0Hit","writeToggle","sprite0","toggle","fineScrollY","fineScrollX","addressBus","readPalette","readBuffer","writePalette","ciramEnabled","ciramA10","ppuRead","ppuWrite","coarseY","offset","patternIndex","row","fetchNameTable","paletteIndex","fetchAttributeTable","pattern","fetchBkgPatternTable","copyWithin","setPatternPixels","bkgPalette","dot","scanline","pixels","some","e","writePixels","spritesList","sprites","top","bottom","flip","attributes","fetchSprPatternTable","sprPalette","target","paletteOffset","colorIndex","backdrop","frameTime","cyclesPerScanline","cyclesPerFrame","cyclesBeforeVBlankStart","vblankStart","cyclesBeforeVBlankEnd","vblankEnd","Engine","firstLoop","mainLoop","runningLoop","init","isPaused","dropped","fps","performance","_delta","_lastTimestamp","_frameTimeThisSecond","_framesThisSecond","_fps","coldBoot","clearTimeout","setTimeout","doInstructions","doVBlank","endVBlank","doPreFetch","timestamp","now","doFrame","updateStats","pause","skipFrame","doScanline","printFrame","doPreRenderLine","cyclesBeforeScanline","clearSecondaryOAM","renderTile","fetchTile","incrementX","evaluateSprites","fetchNullTile","incrementY","resetX","fetchSprite","renderSprite","fetchNullSprite","resetY","fetchNullNTs","Cartridge","mapperNumber","PRGRAM","CHRRAM","PRGROM","CHRROM","PRGBank","CHRBank","horiMirroring","vertMirroring","battery","NROM","_Cartridge","number","MMC1","mirroring","PRGBankMode","CHRBankMode","firstPRGBank","lastPRGBank","bank","CHR0","CHR1","PRG","Object","freeze","constructors","Mapper","mapperNames","CartConnector","name","statuses","fileLoaded","fileValid","fileSupported","filename","countryCodes","exec","search","replace","trim","toUpperCase","slice","header","DataView","getUint32","Error","flags6","getUint8","supported","numPRGBank","numCHRBank","skipped","curBank","byteLength","concat","String","fromCharCode","apply","file","Promise","resolve","reject","parseFilename","size","reader","FileReader","onabort","DOMException","onerror","error","onload","result","readAsArrayBuffer","then","parseData","catch","message","Controller","type","strobing","states","Array","strobe","_toConsumableArray","shift","undefined","BUTTONS","a","b","select","up","down","left","right","Joypad","_Controller","buttonHandlers","v","pressed","toLowerCase","KEYS","Keyboard","_Joypad","opts","keyMap","assignKeys","addEventListener","pressKey","buttonName","keyCode","handler","getButtonHandler","entries","_ref","_ref2","_slicedToArray","_this3","_ref3","_ref4","assignKey","event","keyDown","which","button","preventDefault","CtrlConnector","controller","indexOf","empty","AudioOutput","gainNode","element","Number","max","handleVolumeChange","gain","removeEventListener","AudioContext","createGain","connect","destination","next","close","source","createBufferSource","bufferDuration","duration","currentTime","NES","engine","unload","insert"],"mappings":"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"}